{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/CNAME.txt","path":"CNAME.txt","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME.txt","hash":"dc7ed892df571068d72d4496438cddc9e23b349f","modified":1739179443190},{"_id":"source/_posts/data-warehouse-etl.md","hash":"3059d8a48eec6e295143d9b429f93ed1caba057b","modified":1739262312041},{"_id":"source/_posts/collaborative-filtering.md","hash":"8379154b9e1b05e17bda037fa812082a4edf52dc","modified":1739262312041},{"_id":"source/.DS_Store","hash":"13462dff831a4e59e7029d417eb42a9bb2e34b7c","modified":1739267332333},{"_id":"source/categories/index.md","hash":"ed07639371e9065100add7608cc6718ea083f0a8","modified":1739239582367},{"_id":"source/_posts/hello-world.md","hash":"34f190b1f3e6a4bcf94627e88066c6665ec2fdd5","modified":1739262312018},{"_id":"source/css/custom.css","hash":"d9b627c3df87d3d375952ee8cb7b17505211c14a","modified":1739267770435},{"_id":"source/about/index.md","hash":"60a4fd6f0c339730ceef09224b6d8034c39a55cb","modified":1739268607458},{"_id":"source/about/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1739268052694},{"_id":"source/tags/index.md","hash":"fa2040fadd0f0bf538a6c66315d73a6ddb595e9a","modified":1739239503610},{"_id":"source/resources/index.md","hash":"bb3fd9badf88107960fcb5443ffcfab08e732c4b","modified":1739240971690},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1739185180933},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1739185180933},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1739185180934},{"_id":"themes/next/.DS_Store","hash":"edf5a69e26426c93a01f6619f0e225a62c7a6519","modified":1739261801666},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1739185180938},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1739185180938},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1739185180938},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1739185180974},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1739185180938},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1739185180939},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1739185180940},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1739185180934},{"_id":"themes/next/_config.yml","hash":"2e83bbf83225f998539d31a0a8dab1eff712e9a2","modified":1739263109903},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1739185180946},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1739185180934},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1739185180936},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1739185180936},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1739185180936},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1739185180937},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1739185180936},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1739185180937},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1739185180978},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1739185180937},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1739185180938},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1739185180937},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1739185180940},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1739185180941},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1739185180941},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1739185180941},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1739185180942},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1739185180941},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1739185180942},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1739185180942},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1739185180942},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1739185180972},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1739185180972},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1739185180973},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1739185180973},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1739185180953},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1739185180973},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1739185180973},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1739185180947},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1739185180947},{"_id":"themes/next/source/.DS_Store","hash":"0948020b4aade068dd08df6135d4460922883f5f","modified":1739261801663},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1739185180948},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1739185180948},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1739185180948},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1739185180948},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1739185180949},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1739185180949},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1739185180949},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1739185180948},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1739185180949},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1739185180950},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1739185180950},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1739185180950},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1739185180950},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1739185180951},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1739185180951},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1739185180952},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1739185180952},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1739185180953},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1739185180951},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1739185180952},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1739185180974},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1739185180935},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1739185180934},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1739185180976},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1739185180935},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1739185180977},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1739185180977},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1739185180977},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1739185180977},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1739185180978},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1739185180935},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1739185180977},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1739185180978},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1739185180978},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1739185180979},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1739185180978},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1739185180979},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1739185180979},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1739185180979},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1739185180979},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1739185180980},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1739185180980},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1739185180980},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1739185180980},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1739185180943},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1739185180943},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1739185180943},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1739185180943},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1739185180954},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1739185180944},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1739185180954},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1739185180954},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1739185180943},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1739185180944},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1739185180944},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1739185180945},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1739185180944},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1739185180946},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1739185180945},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1739185180946},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1739185180955},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1739185180955},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1739185180958},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1739185180957},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1739185180968},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1739185180969},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1739185180962},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1739185180966},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1739185180962},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1739185180963},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1739185180963},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1739185180969},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1739185180981},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1739185180965},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1739185180965},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1739185181007},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1739185180999},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1739185181014},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1739185181014},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1739185181015},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1739185181014},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1739185181015},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1739185181016},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1739185181016},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1739185181007},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1739185181007},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1739185181009},{"_id":"themes/next/source/images/.DS_Store","hash":"66fdc781a01ad231c4cfab66e441f501afd078c0","modified":1739260590039},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1739185181010},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1739185181011},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1739185181011},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1739185181012},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1739185181012},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1739185181012},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1739185181013},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1739185180974},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1739185181013},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1739185181013},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1739185181013},{"_id":"themes/next/source/images/avatar.jpg","hash":"f092c5ca1b387b8fd0b8cecb1a657a910fbdacd9","modified":1724740376176},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1739185180975},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1739185180975},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1739185180975},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1739185180975},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1739185180975},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1739185180975},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1739185180976},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1739185180976},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1739185180976},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1739185180976},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1739185180955},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1739185180955},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1739185180956},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1739185180956},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1739185180956},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1739185180957},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1739185180957},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1739185180958},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1739185180958},{"_id":"themes/next/source/images/logo.png","hash":"d338a8cdef43d5c5a32db62acc3595c6dbeec7f4","modified":1739260689276},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1739185180958},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1739185180959},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1739185180959},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1739185180959},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1739185180960},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1739185180960},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1739185180960},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1739185180961},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1739185180961},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1739185180965},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1739185180965},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1739185180966},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1739185180966},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1739185180966},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1739185180967},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1739185180966},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1739185180967},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1739185180967},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1739185180967},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1739185180968},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1739185180970},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1739185180970},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1739185180968},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1739185180971},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1739185180971},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1739185180971},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1739185180969},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1739185180969},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1739185180969},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1739185180971},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1739185180969},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1739185180972},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1739185180970},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1739185180970},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1739185180963},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1739185180964},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1739185180964},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1739185180964},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1739185180965},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1739185181006},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1739185181005},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1739185181006},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1739185181006},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1739185181007},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1739185181015},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1739185181015},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1739185180981},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1739185180982},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1739185180982},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1739185180986},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1739185181019},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1739185181019},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1739185180993},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1739185180994},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1739185180994},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1739185180995},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1739185180996},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1739185180996},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1739185180996},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1739185180999},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1739185181002},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1739185181000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1739185181002},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1739185181002},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1739185180990},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1739185180991},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1739185181002},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1739185181003},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1739185181000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1739185181001},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1739185181003},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1739185181001},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1739185181001},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1739185181001},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1739185181003},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1739185181004},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1739185181004},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1739185181004},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1739185181005},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1739185181005},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1739185181017},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1739185180982},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1739185181018},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1739185180982},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1739185180982},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1739185180983},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1739185180983},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1739185180983},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1739185180984},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1739185180984},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1739185180984},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1739185180984},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1739185180985},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1739185180985},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1739185180985},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1739185180985},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1739185180985},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1739185180986},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1739185180986},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1739185180986},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1739185180987},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1739185180987},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1739185180987},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1739185180988},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1739185180988},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1739185180994},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1739185180995},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1739185180995},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1739185180995},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1739185180988},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1739185180997},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1739185180997},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1739185180997},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1739185180997},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1739185180998},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1739185180998},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1739185180998},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1739185180989},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1739185180989},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1739185180989},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1739185180990},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1739185180989},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1739185180990},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1739185180991},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1739185180991},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1739185180990},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1739185180991},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1739185180992},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1739185180992},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1739185180992},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1739185180992},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1739185180992},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1739185180993},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1739185180993},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1739185181018},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1739185181018},{"_id":"public/css/custom.css","hash":"d9b627c3df87d3d375952ee8cb7b17505211c14a","modified":1739268686447},{"_id":"public/atom.xml","hash":"e0756bd7e6ac08445a8fe118cb745d6b3c468144","modified":1739268686447},{"_id":"public/sitemap.xml","hash":"792e43016bf7505b7e2e8e285c649ba6aefd3251","modified":1739268686447},{"_id":"public/search.xml","hash":"9a6181a5e370570b4ebe6ef29b4b2cb9ae63534f","modified":1739268686447},{"_id":"public/categories/index.html","hash":"c6683597268672d9a477a2f290e0706e066b7b92","modified":1739268686447},{"_id":"public/resources/index.html","hash":"bac57ad1c44b2db5fc86360ee5a83b1c70ba3279","modified":1739268686447},{"_id":"public/tags/index.html","hash":"19e692d030f12eeb26f0b1a38f6c8adf4dbaa2e0","modified":1739268686447},{"_id":"public/categories/技术分享/index.html","hash":"174454d99b1849947616ddb8c380f98cefeaeb97","modified":1739268686447},{"_id":"public/categories/个人简介/index.html","hash":"596018cc0fbd269c77d5afcc8733a16fa461a92d","modified":1739268686447},{"_id":"public/archives/index.html","hash":"4a2d50d405ab087543125a2cd1f5d59e5d02015d","modified":1739268686447},{"_id":"public/archives/2025/index.html","hash":"0e1d79862e4255054120510e05d3a78274598f12","modified":1739268686447},{"_id":"public/archives/2025/02/index.html","hash":"c3c75ce77c5613b345b4d03a50b896228ca23d1e","modified":1739268686447},{"_id":"public/tags/推荐系统/index.html","hash":"1bd88d62f7996bbca8ca792747faf6fda94561bd","modified":1739268686447},{"_id":"public/tags/机器学习/index.html","hash":"f75ba63be593105436444b2a05bfccfb65bc03f8","modified":1739268686447},{"_id":"public/tags/Python/index.html","hash":"a1471b4f9e3d5dad355a6805bc27cf4e2d968bdf","modified":1739268686447},{"_id":"public/tags/协同过滤/index.html","hash":"2e221987de15d58bd038f25a78253412e598ac96","modified":1739268686447},{"_id":"public/tags/ETL/index.html","hash":"73aba05a9ca935333fe23369e92913c26c9d559d","modified":1739268686447},{"_id":"public/tags/数据仓库/index.html","hash":"23199732a7a4cec6840a18e4f6790c2d264b9709","modified":1739268686447},{"_id":"public/tags/Airflow/index.html","hash":"ab7da6623f29acb1beece86748595003d2c71034","modified":1739268686447},{"_id":"public/tags/后端开发/index.html","hash":"cd0a0a8a3b1985966d652f39735bd36043ce76a5","modified":1739268686447},{"_id":"public/tags/Java/index.html","hash":"9fd8dc465ea40babf530a3aeb7cd43417e4d30cf","modified":1739268686447},{"_id":"public/tags/Spring-Boot/index.html","hash":"db27f40d76573c6bc2eae20f6b5fa2d9b1078be2","modified":1739268686447},{"_id":"public/about/index.html","hash":"f3e4346e999df666cff50fe820c9547019a1f689","modified":1739268686447},{"_id":"public/2025/02/11/hello-world/index.html","hash":"695073ea5f786d7cc807946f971475204d037911","modified":1739268686447},{"_id":"public/2025/02/10/data-warehouse-etl/index.html","hash":"444e5870c3d8040fb2f397efb1ef74582dcfca6f","modified":1739268686447},{"_id":"public/2025/02/09/collaborative-filtering/index.html","hash":"24f25021cf56cc76e62a3637178b05cce1a59cc8","modified":1739268686447},{"_id":"public/index.html","hash":"cc9b822c0eb1edf2ad37233160e69b9c690dc279","modified":1739268686447},{"_id":"public/CNAME.txt","hash":"dc7ed892df571068d72d4496438cddc9e23b349f","modified":1739268686447},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1739268686447},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1739268686447},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1739268686447},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1739268686447},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1739268686447},{"_id":"public/images/avatar.jpg","hash":"f092c5ca1b387b8fd0b8cecb1a657a910fbdacd9","modified":1739268686447},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1739268686447},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1739268686447},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1739268686447},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1739268686447},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1739268686447},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1739268686447},{"_id":"public/images/logo.png","hash":"d338a8cdef43d5c5a32db62acc3595c6dbeec7f4","modified":1739268686447},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1739268686447},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1739268686447},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1739268686447},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1739268686447},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1739268686447},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1739268686447},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1739268686447},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1739268686447},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1739268686447},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1739268686447},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1739268686447},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1739268686447},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1739268686447},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1739268686447},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1739268686447},{"_id":"public/css/main.css","hash":"aa6dd182e72367760c2bb2b8e82219e7d8dcdfad","modified":1739268686447},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1739268686447},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1739268686447}],"Category":[{"name":"技术分享","_id":"cm70bo4aa0004utfyabqu6bxe"},{"name":"个人简介","_id":"cm70bo4ai000cutfy2o062xbf"}],"Data":[],"Page":[{"title":"分类","date":"2025-02-10T14:07:08.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-02-10 22:07:08\ntype: \"categories\"\ncomments: false\n---\n","updated":"2025-02-11T02:06:22.367Z","path":"categories/index.html","layout":"page","_id":"cm70bo49w0000utfyejoc10re","content":"","excerpt":"","more":""},{"_content":"/* 文章内容样式优化 */\n.post-body {\n  font-size: 1.1em;\n  line-height: 1.8;\n}\n\n/* 代码块样式 */\npre {\n  background: #f8f8f8;\n  border-radius: 3px;\n  padding: 15px;\n}\n\n/* 链接样式 */\na {\n  color: #0366d6;\n  transition: color 0.2s ease;\n}\n\na:hover {\n  color: #0056b3;\n}\n\n/* 响应式设计优化 */\n@media (max-width: 767px) {\n  .post-body {\n    font-size: 1em;\n  }\n} ","source":"css/custom.css","raw":"/* 文章内容样式优化 */\n.post-body {\n  font-size: 1.1em;\n  line-height: 1.8;\n}\n\n/* 代码块样式 */\npre {\n  background: #f8f8f8;\n  border-radius: 3px;\n  padding: 15px;\n}\n\n/* 链接样式 */\na {\n  color: #0366d6;\n  transition: color 0.2s ease;\n}\n\na:hover {\n  color: #0056b3;\n}\n\n/* 响应式设计优化 */\n@media (max-width: 767px) {\n  .post-body {\n    font-size: 1em;\n  }\n} ","date":"2025-02-11T09:56:10.435Z","updated":"2025-02-11T09:56:10.435Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cm70bo4a80002utfy04jtaagj","content":"/* 文章内容样式优化 */\n.post-body {\n  font-size: 1.1em;\n  line-height: 1.8;\n}\n\n/* 代码块样式 */\npre {\n  background: #f8f8f8;\n  border-radius: 3px;\n  padding: 15px;\n}\n\n/* 链接样式 */\na {\n  color: #0366d6;\n  transition: color 0.2s ease;\n}\n\na:hover {\n  color: #0056b3;\n}\n\n/* 响应式设计优化 */\n@media (max-width: 767px) {\n  .post-body {\n    font-size: 1em;\n  }\n} "},{"title":"关于我","date":"2025-02-10T16:00:00.000Z","type":"about","_content":"\n{% note info %}\n热爱技术，专注创新，致力于成为优秀的全栈工程师\n{% endnote %}\n\n## <i class=\"fas fa-user\"></i> 个人简介\n\n全栈开发工程师，专注于Java后端开发和分布式系统架构设计。热爱编程，对新技术充满热情，享受解决技术难题的过程。\n\n## <i class=\"fas fa-project-diagram\"></i> 项目经验\n\n{% tabs projects %}\n<!-- tab 汽车改装推荐系统 -->\n**GitHub**: [car-modification-recommend](https://github.com/oliver037/car-modification-recommend)\n\n- 基于Spring Boot + MyBatis构建的REST API服务\n- 使用协同过滤算法实现个性化推荐功能\n- 集成Redis实现高并发缓存\n- 采用Elasticsearch提供全文搜索能力\n<!-- endtab -->\n\n<!-- tab 数据仓库ETL平台 -->\n**GitHub**: [data-warehouse-etl](https://github.com/oliver037/data-warehouse-etl)\n\n- 基于Spring Cloud微服务架构\n- 使用Apache Airflow编排ETL工作流\n- 集成Hadoop和Spark进行大规模数据处理\n- 实现实时数据同步和离线数据处理\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-graduation-cap\"></i> 教育背景\n\n**北京城市学院** | 大数据与互联网专业 | 2021-2025\n\n## <i class=\"fas fa-laptop-code\"></i> 技术栈\n\n{% tabs tech-stack %}\n<!-- tab 后端开发 -->\n- Java / Spring Boot / MyBatis\n- Spring Cloud 微服务\n- RESTful API 设计\n- 微服务架构\n<!-- endtab -->\n\n<!-- tab 数据库 -->\n- MySQL / Redis / MongoDB\n- 数据库优化\n- 缓存策略\n- Elasticsearch\n<!-- endtab -->\n\n<!-- tab 大数据 -->\n- Hadoop生态系统\n- Spark\n- Kafka\n- Hive / HBase\n<!-- endtab -->\n\n<!-- tab 开发工具 -->\n- Git / Maven\n- Docker / Jenkins\n- IDEA / VS Code\n- Linux\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-envelope\"></i> 联系我\n\n- Email: 1419235897@qq.com\n- GitHub: [oliver037](https://github.com/oliver037)\n- Phone: 15811534195\n\n{% note success %}\n座右铭：脚踏实地做事，顶天立地做人\n{% endnote %}\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2025-02-11\ntype: \"about\"\n---\n\n{% note info %}\n热爱技术，专注创新，致力于成为优秀的全栈工程师\n{% endnote %}\n\n## <i class=\"fas fa-user\"></i> 个人简介\n\n全栈开发工程师，专注于Java后端开发和分布式系统架构设计。热爱编程，对新技术充满热情，享受解决技术难题的过程。\n\n## <i class=\"fas fa-project-diagram\"></i> 项目经验\n\n{% tabs projects %}\n<!-- tab 汽车改装推荐系统 -->\n**GitHub**: [car-modification-recommend](https://github.com/oliver037/car-modification-recommend)\n\n- 基于Spring Boot + MyBatis构建的REST API服务\n- 使用协同过滤算法实现个性化推荐功能\n- 集成Redis实现高并发缓存\n- 采用Elasticsearch提供全文搜索能力\n<!-- endtab -->\n\n<!-- tab 数据仓库ETL平台 -->\n**GitHub**: [data-warehouse-etl](https://github.com/oliver037/data-warehouse-etl)\n\n- 基于Spring Cloud微服务架构\n- 使用Apache Airflow编排ETL工作流\n- 集成Hadoop和Spark进行大规模数据处理\n- 实现实时数据同步和离线数据处理\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-graduation-cap\"></i> 教育背景\n\n**北京城市学院** | 大数据与互联网专业 | 2021-2025\n\n## <i class=\"fas fa-laptop-code\"></i> 技术栈\n\n{% tabs tech-stack %}\n<!-- tab 后端开发 -->\n- Java / Spring Boot / MyBatis\n- Spring Cloud 微服务\n- RESTful API 设计\n- 微服务架构\n<!-- endtab -->\n\n<!-- tab 数据库 -->\n- MySQL / Redis / MongoDB\n- 数据库优化\n- 缓存策略\n- Elasticsearch\n<!-- endtab -->\n\n<!-- tab 大数据 -->\n- Hadoop生态系统\n- Spark\n- Kafka\n- Hive / HBase\n<!-- endtab -->\n\n<!-- tab 开发工具 -->\n- Git / Maven\n- Docker / Jenkins\n- IDEA / VS Code\n- Linux\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-envelope\"></i> 联系我\n\n- Email: 1419235897@qq.com\n- GitHub: [oliver037](https://github.com/oliver037)\n- Phone: 15811534195\n\n{% note success %}\n座右铭：脚踏实地做事，顶天立地做人\n{% endnote %}\n","updated":"2025-02-11T10:10:07.458Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm70bo4ad0006utfy0vy6bwus","content":"<div class=\"note info\">\n            <p>热爱技术，专注创新，致力于成为优秀的全栈工程师</p>\n          </div>\n\n<h2 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\" 个人简介\"></a><i class=\"fas fa-user\"></i> 个人简介</h2><p>全栈开发工程师，专注于Java后端开发和分布式系统架构设计。热爱编程，对新技术充满热情，享受解决技术难题的过程。</p>\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\" 项目经验\"></a><i class=\"fas fa-project-diagram\"></i> 项目经验</h2><div class=\"tabs\" id=\"projects\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#projects-1\">汽车改装推荐系统</a></li><li class=\"tab\"><a href=\"#projects-2\">数据仓库ETL平台</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"projects-1\"><p><strong>GitHub</strong>: <a href=\"https://github.com/oliver037/car-modification-recommend\">car-modification-recommend</a></p>\n<ul>\n<li>基于Spring Boot + MyBatis构建的REST API服务</li>\n<li>使用协同过滤算法实现个性化推荐功能</li>\n<li>集成Redis实现高并发缓存</li>\n<li>采用Elasticsearch提供全文搜索能力</li>\n</ul></div><div class=\"tab-pane\" id=\"projects-2\"><p><strong>GitHub</strong>: <a href=\"https://github.com/oliver037/data-warehouse-etl\">data-warehouse-etl</a></p>\n<ul>\n<li>基于Spring Cloud微服务架构</li>\n<li>使用Apache Airflow编排ETL工作流</li>\n<li>集成Hadoop和Spark进行大规模数据处理</li>\n<li>实现实时数据同步和离线数据处理</li>\n</ul></div></div></div>\n\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\" 教育背景\"></a><i class=\"fas fa-graduation-cap\"></i> 教育背景</h2><p><strong>北京城市学院</strong> | 大数据与互联网专业 | 2021-2025</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\" 技术栈\"></a><i class=\"fas fa-laptop-code\"></i> 技术栈</h2><div class=\"tabs\" id=\"tech-stack\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tech-stack-1\">后端开发</a></li><li class=\"tab\"><a href=\"#tech-stack-2\">数据库</a></li><li class=\"tab\"><a href=\"#tech-stack-3\">大数据</a></li><li class=\"tab\"><a href=\"#tech-stack-4\">开发工具</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tech-stack-1\"><ul>\n<li>Java &#x2F; Spring Boot &#x2F; MyBatis</li>\n<li>Spring Cloud 微服务</li>\n<li>RESTful API 设计</li>\n<li>微服务架构</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-2\"><ul>\n<li>MySQL &#x2F; Redis &#x2F; MongoDB</li>\n<li>数据库优化</li>\n<li>缓存策略</li>\n<li>Elasticsearch</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-3\"><ul>\n<li>Hadoop生态系统</li>\n<li>Spark</li>\n<li>Kafka</li>\n<li>Hive &#x2F; HBase</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-4\"><ul>\n<li>Git &#x2F; Maven</li>\n<li>Docker &#x2F; Jenkins</li>\n<li>IDEA &#x2F; VS Code</li>\n<li>Linux</li>\n</ul></div></div></div>\n\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\" 联系我\"></a><i class=\"fas fa-envelope\"></i> 联系我</h2><ul>\n<li>Email: <a href=\"mailto:&#49;&#52;&#x31;&#x39;&#50;&#x33;&#53;&#56;&#57;&#x37;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;\">&#49;&#52;&#x31;&#x39;&#50;&#x33;&#53;&#56;&#57;&#x37;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;</a></li>\n<li>GitHub: <a href=\"https://github.com/oliver037\">oliver037</a></li>\n<li>Phone: 15811534195</li>\n</ul>\n<div class=\"note success\">\n            <p>座右铭：脚踏实地做事，顶天立地做人</p>\n          </div>\n","excerpt":"","more":"<div class=\"note info\">\n            <p>热爱技术，专注创新，致力于成为优秀的全栈工程师</p>\n          </div>\n\n<h2 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\" 个人简介\"></a><i class=\"fas fa-user\"></i> 个人简介</h2><p>全栈开发工程师，专注于Java后端开发和分布式系统架构设计。热爱编程，对新技术充满热情，享受解决技术难题的过程。</p>\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\" 项目经验\"></a><i class=\"fas fa-project-diagram\"></i> 项目经验</h2><div class=\"tabs\" id=\"projects\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#projects-1\">汽车改装推荐系统</a></li><li class=\"tab\"><a href=\"#projects-2\">数据仓库ETL平台</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"projects-1\"><p><strong>GitHub</strong>: <a href=\"https://github.com/oliver037/car-modification-recommend\">car-modification-recommend</a></p>\n<ul>\n<li>基于Spring Boot + MyBatis构建的REST API服务</li>\n<li>使用协同过滤算法实现个性化推荐功能</li>\n<li>集成Redis实现高并发缓存</li>\n<li>采用Elasticsearch提供全文搜索能力</li>\n</ul></div><div class=\"tab-pane\" id=\"projects-2\"><p><strong>GitHub</strong>: <a href=\"https://github.com/oliver037/data-warehouse-etl\">data-warehouse-etl</a></p>\n<ul>\n<li>基于Spring Cloud微服务架构</li>\n<li>使用Apache Airflow编排ETL工作流</li>\n<li>集成Hadoop和Spark进行大规模数据处理</li>\n<li>实现实时数据同步和离线数据处理</li>\n</ul></div></div></div>\n\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\" 教育背景\"></a><i class=\"fas fa-graduation-cap\"></i> 教育背景</h2><p><strong>北京城市学院</strong> | 大数据与互联网专业 | 2021-2025</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\" 技术栈\"></a><i class=\"fas fa-laptop-code\"></i> 技术栈</h2><div class=\"tabs\" id=\"tech-stack\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tech-stack-1\">后端开发</a></li><li class=\"tab\"><a href=\"#tech-stack-2\">数据库</a></li><li class=\"tab\"><a href=\"#tech-stack-3\">大数据</a></li><li class=\"tab\"><a href=\"#tech-stack-4\">开发工具</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tech-stack-1\"><ul>\n<li>Java &#x2F; Spring Boot &#x2F; MyBatis</li>\n<li>Spring Cloud 微服务</li>\n<li>RESTful API 设计</li>\n<li>微服务架构</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-2\"><ul>\n<li>MySQL &#x2F; Redis &#x2F; MongoDB</li>\n<li>数据库优化</li>\n<li>缓存策略</li>\n<li>Elasticsearch</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-3\"><ul>\n<li>Hadoop生态系统</li>\n<li>Spark</li>\n<li>Kafka</li>\n<li>Hive &#x2F; HBase</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-4\"><ul>\n<li>Git &#x2F; Maven</li>\n<li>Docker &#x2F; Jenkins</li>\n<li>IDEA &#x2F; VS Code</li>\n<li>Linux</li>\n</ul></div></div></div>\n\n<h2 id=\"联系我\"><a href=\"#联系我\" class=\"headerlink\" title=\" 联系我\"></a><i class=\"fas fa-envelope\"></i> 联系我</h2><ul>\n<li>Email: <a href=\"mailto:&#49;&#52;&#x31;&#x39;&#50;&#x33;&#53;&#56;&#57;&#x37;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;\">&#49;&#52;&#x31;&#x39;&#50;&#x33;&#53;&#56;&#57;&#x37;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;</a></li>\n<li>GitHub: <a href=\"https://github.com/oliver037\">oliver037</a></li>\n<li>Phone: 15811534195</li>\n</ul>\n<div class=\"note success\">\n            <p>座右铭：脚踏实地做事，顶天立地做人</p>\n          </div>\n"},{"title":"技术资源","date":"2024-03-20T16:00:00.000Z","type":"resources","_content":"\n{% note info %}\n分享一些有用的技术资源和工具\n{% endnote %}\n\n## <i class=\"fas fa-book\"></i> 技术书籍推荐\n\n- 《深入理解Java虚拟机》\n- 《Spring实战》\n- 《深入理解计算机系统》\n\n## <i class=\"fas fa-tools\"></i> 开发工具\n\n- IDEA\n- Postman\n- Git\n- Docker\n","source":"resources/index.md","raw":"---\ntitle: 技术资源\ndate: 2024-03-21\ntype: \"resources\"\n---\n\n{% note info %}\n分享一些有用的技术资源和工具\n{% endnote %}\n\n## <i class=\"fas fa-book\"></i> 技术书籍推荐\n\n- 《深入理解Java虚拟机》\n- 《Spring实战》\n- 《深入理解计算机系统》\n\n## <i class=\"fas fa-tools\"></i> 开发工具\n\n- IDEA\n- Postman\n- Git\n- Docker\n","updated":"2025-02-11T02:29:31.690Z","path":"resources/index.html","comments":1,"layout":"page","_id":"cm70bo4ae0008utfy0awj5tjb","content":"<div class=\"note info\">\n            <p>分享一些有用的技术资源和工具</p>\n          </div>\n\n<h2 id=\"技术书籍推荐\"><a href=\"#技术书籍推荐\" class=\"headerlink\" title=\" 技术书籍推荐\"></a><i class=\"fas fa-book\"></i> 技术书籍推荐</h2><ul>\n<li>《深入理解Java虚拟机》</li>\n<li>《Spring实战》</li>\n<li>《深入理解计算机系统》</li>\n</ul>\n<h2 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\" 开发工具\"></a><i class=\"fas fa-tools\"></i> 开发工具</h2><ul>\n<li>IDEA</li>\n<li>Postman</li>\n<li>Git</li>\n<li>Docker</li>\n</ul>\n","excerpt":"","more":"<div class=\"note info\">\n            <p>分享一些有用的技术资源和工具</p>\n          </div>\n\n<h2 id=\"技术书籍推荐\"><a href=\"#技术书籍推荐\" class=\"headerlink\" title=\" 技术书籍推荐\"></a><i class=\"fas fa-book\"></i> 技术书籍推荐</h2><ul>\n<li>《深入理解Java虚拟机》</li>\n<li>《Spring实战》</li>\n<li>《深入理解计算机系统》</li>\n</ul>\n<h2 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\" 开发工具\"></a><i class=\"fas fa-tools\"></i> 开发工具</h2><ul>\n<li>IDEA</li>\n<li>Postman</li>\n<li>Git</li>\n<li>Docker</li>\n</ul>\n"},{"title":"tags","date":"2025-02-11T02:05:03.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2025-02-11 10:05:03\n---\n","updated":"2025-02-11T02:05:03.610Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm70bo4af0009utfyctc7fp75","content":"","excerpt":"","more":""}],"Post":[{"title":"协同过滤在汽车改装推荐中的应用","date":"2025-02-08T16:00:00.000Z","_content":"\n{% note default %}\n### 文章导航\n- [返回首页](/)\n- [查看更多技术文章](/categories/技术分享/)\n\n### 相关文章\n- [数据仓库ETL流程设计与实现](/2025/02/10/data-warehouse-etl/)\n{% endnote %}\n\n{% note info %}\n本文详细介绍如何在汽车改装领域应用协同过滤算法，实现个性化的配件推荐。\n{% endnote %}\n\n## 算法原理\n\n{% note primary %}\n协同过滤算法主要分为两类：\n1. 基于用户的协同过滤（User-Based CF）\n2. 基于物品的协同过滤（Item-Based CF）\n{% endnote %}\n\n## 基于用户的协同过滤实现\n\n### 相似度计算\n```python\ndef calculate_user_similarity(user_item_matrix):\n    \"\"\"计算用户之间的相似度\"\"\"\n    # 使用余弦相似度\n    user_similarity = cosine_similarity(user_item_matrix)\n    \n    # 转换为DataFrame便于查询\n    similarity_df = pd.DataFrame(\n        user_similarity,\n        index=user_item_matrix.index,\n        columns=user_item_matrix.index\n    )\n    \n    return similarity_df\n\ndef get_similar_users(user_id, user_similarity, n=5):\n    \"\"\"获取最相似的用户\"\"\"\n    similar_users = user_similarity[user_id].sort_values(\n        ascending=False\n    )[1:n+1]\n    \n    return similar_users\n```\n\n### 推荐生成\n```python\ndef generate_recommendations(user_id, similar_users, user_item_matrix):\n    \"\"\"基于相似用户生成推荐\"\"\"\n    recommendations = defaultdict(float)\n    \n    for similar_user, similarity in similar_users.items():\n        # 获取相似用户的评分记录\n        user_ratings = user_item_matrix.loc[similar_user]\n        \n        # 计算加权评分\n        for item, rating in user_ratings.items():\n            if rating > 0:  # 只考虑正面评价\n                recommendations[item] += similarity * rating\n    \n    # 排序并返回推荐结果\n    sorted_recommendations = sorted(\n        recommendations.items(),\n        key=lambda x: x[1],\n        reverse=True\n    )\n    \n    return sorted_recommendations\n```\n\n## 基于物品的协同过滤实现\n\n### 物品相似度计算\n```python\nclass ItemBasedCF:\n    def __init__(self, n_neighbors=5):\n        self.n_neighbors = n_neighbors\n        self.item_similarity_matrix = None\n        \n    def fit(self, user_item_matrix):\n        \"\"\"计算物品相似度矩阵\"\"\"\n        # 转置矩阵，计算物品间的相似度\n        self.item_similarity_matrix = cosine_similarity(\n            user_item_matrix.T\n        )\n        \n        # 转换为DataFrame\n        self.item_similarity_matrix = pd.DataFrame(\n            self.item_similarity_matrix,\n            index=user_item_matrix.columns,\n            columns=user_item_matrix.columns\n        )\n    \n    def recommend(self, user_id, user_item_matrix):\n        \"\"\"为用户生成推荐\"\"\"\n        # 获取用户已有的配件\n        user_items = user_item_matrix.loc[user_id]\n        user_items = user_items[user_items > 0]\n        \n        # 计算推荐分数\n        recommendations = defaultdict(float)\n        \n        for item, rating in user_items.items():\n            # 获取相似物品\n            similar_items = self.item_similarity_matrix[item]\n            \n            # 计算加权评分\n            for similar_item, similarity in similar_items.items():\n                if similar_item not in user_items:\n                    recommendations[similar_item] += similarity * rating\n        \n        return sorted(\n            recommendations.items(),\n            key=lambda x: x[1],\n            reverse=True\n        )\n```\n\n## 冷启动问题解决\n\n### 基于内容的推荐\n```python\ndef content_based_recommendation(user_profile, items_features):\n    \"\"\"基于内容的推荐\"\"\"\n    # 提取用户特征\n    user_features = extract_user_features(user_profile)\n    \n    # 计算物品相似度\n    similarities = cosine_similarity(\n        user_features.reshape(1, -1),\n        items_features\n    )\n    \n    # 返回最相似的物品\n    return np.argsort(similarities[0])[::-1]\n```\n\n### 混合推荐策略\n```python\ndef hybrid_recommendation(user_id, user_profile):\n    \"\"\"混合推荐策略\"\"\"\n    if is_new_user(user_id):\n        # 新用户使用基于内容的推荐\n        recommendations = content_based_recommendation(\n            user_profile,\n            items_features\n        )\n    else:\n        # 老用户使用协同过滤\n        cf_recommendations = collaborative_filtering(user_id)\n        content_recommendations = content_based_recommendation(\n            user_profile,\n            items_features\n        )\n        # 融合两种推荐结果\n        recommendations = merge_recommendations(\n            cf_recommendations,\n            content_recommendations\n        )\n    \n    return recommendations\n```\n\n## 性能优化\n\n1. 数据预处理\n```python\ndef preprocess_data():\n    \"\"\"数据预处理优化\"\"\"\n    # 使用稀疏矩阵存储\n    sparse_matrix = csr_matrix(user_item_matrix)\n    \n    # 归一化处理\n    normalized_matrix = normalize(sparse_matrix)\n    \n    return normalized_matrix\n```\n\n2. 计算优化\n```python\ndef optimize_similarity_calculation():\n    \"\"\"相似度计算优化\"\"\"\n    # 使用近似最近邻搜索\n    ann_index = AnnoyIndex(f=vector_dim)\n    \n    # 批量计算相似度\n    with ThreadPoolExecutor() as executor:\n        similarities = list(executor.map(\n            calculate_similarity,\n            vectors\n        ))\n```\n\n## 效果评估\n\n{% note success %}\n系统上线后取得了显著效果：\n- 推荐准确率：85%\n- 用户采纳率：提升40%\n- 系统响应时间：<100ms\n{% endnote %}\n\n## 经验总结\n\n1. 数据质量至关重要\n2. 需要合理处理冷启动问题\n3. 性能优化不能忽视\n4. 持续监控和改进很重要\n\n{% note info %}\n### 分享与交流\n如果您觉得本文对您有帮助，欢迎：\n- 在下方评论区留言讨论\n- 分享给更多朋友\n- 关注我的 [GitHub](https://github.com/oliver037)\n{% endnote %} ","source":"_posts/collaborative-filtering.md","raw":"---\ntitle: 协同过滤在汽车改装推荐中的应用\ndate: 2025-02-09\ncategories: \n- 技术分享\ntags:\n- 推荐系统\n- 机器学习\n- Python\n- 协同过滤\n---\n\n{% note default %}\n### 文章导航\n- [返回首页](/)\n- [查看更多技术文章](/categories/技术分享/)\n\n### 相关文章\n- [数据仓库ETL流程设计与实现](/2025/02/10/data-warehouse-etl/)\n{% endnote %}\n\n{% note info %}\n本文详细介绍如何在汽车改装领域应用协同过滤算法，实现个性化的配件推荐。\n{% endnote %}\n\n## 算法原理\n\n{% note primary %}\n协同过滤算法主要分为两类：\n1. 基于用户的协同过滤（User-Based CF）\n2. 基于物品的协同过滤（Item-Based CF）\n{% endnote %}\n\n## 基于用户的协同过滤实现\n\n### 相似度计算\n```python\ndef calculate_user_similarity(user_item_matrix):\n    \"\"\"计算用户之间的相似度\"\"\"\n    # 使用余弦相似度\n    user_similarity = cosine_similarity(user_item_matrix)\n    \n    # 转换为DataFrame便于查询\n    similarity_df = pd.DataFrame(\n        user_similarity,\n        index=user_item_matrix.index,\n        columns=user_item_matrix.index\n    )\n    \n    return similarity_df\n\ndef get_similar_users(user_id, user_similarity, n=5):\n    \"\"\"获取最相似的用户\"\"\"\n    similar_users = user_similarity[user_id].sort_values(\n        ascending=False\n    )[1:n+1]\n    \n    return similar_users\n```\n\n### 推荐生成\n```python\ndef generate_recommendations(user_id, similar_users, user_item_matrix):\n    \"\"\"基于相似用户生成推荐\"\"\"\n    recommendations = defaultdict(float)\n    \n    for similar_user, similarity in similar_users.items():\n        # 获取相似用户的评分记录\n        user_ratings = user_item_matrix.loc[similar_user]\n        \n        # 计算加权评分\n        for item, rating in user_ratings.items():\n            if rating > 0:  # 只考虑正面评价\n                recommendations[item] += similarity * rating\n    \n    # 排序并返回推荐结果\n    sorted_recommendations = sorted(\n        recommendations.items(),\n        key=lambda x: x[1],\n        reverse=True\n    )\n    \n    return sorted_recommendations\n```\n\n## 基于物品的协同过滤实现\n\n### 物品相似度计算\n```python\nclass ItemBasedCF:\n    def __init__(self, n_neighbors=5):\n        self.n_neighbors = n_neighbors\n        self.item_similarity_matrix = None\n        \n    def fit(self, user_item_matrix):\n        \"\"\"计算物品相似度矩阵\"\"\"\n        # 转置矩阵，计算物品间的相似度\n        self.item_similarity_matrix = cosine_similarity(\n            user_item_matrix.T\n        )\n        \n        # 转换为DataFrame\n        self.item_similarity_matrix = pd.DataFrame(\n            self.item_similarity_matrix,\n            index=user_item_matrix.columns,\n            columns=user_item_matrix.columns\n        )\n    \n    def recommend(self, user_id, user_item_matrix):\n        \"\"\"为用户生成推荐\"\"\"\n        # 获取用户已有的配件\n        user_items = user_item_matrix.loc[user_id]\n        user_items = user_items[user_items > 0]\n        \n        # 计算推荐分数\n        recommendations = defaultdict(float)\n        \n        for item, rating in user_items.items():\n            # 获取相似物品\n            similar_items = self.item_similarity_matrix[item]\n            \n            # 计算加权评分\n            for similar_item, similarity in similar_items.items():\n                if similar_item not in user_items:\n                    recommendations[similar_item] += similarity * rating\n        \n        return sorted(\n            recommendations.items(),\n            key=lambda x: x[1],\n            reverse=True\n        )\n```\n\n## 冷启动问题解决\n\n### 基于内容的推荐\n```python\ndef content_based_recommendation(user_profile, items_features):\n    \"\"\"基于内容的推荐\"\"\"\n    # 提取用户特征\n    user_features = extract_user_features(user_profile)\n    \n    # 计算物品相似度\n    similarities = cosine_similarity(\n        user_features.reshape(1, -1),\n        items_features\n    )\n    \n    # 返回最相似的物品\n    return np.argsort(similarities[0])[::-1]\n```\n\n### 混合推荐策略\n```python\ndef hybrid_recommendation(user_id, user_profile):\n    \"\"\"混合推荐策略\"\"\"\n    if is_new_user(user_id):\n        # 新用户使用基于内容的推荐\n        recommendations = content_based_recommendation(\n            user_profile,\n            items_features\n        )\n    else:\n        # 老用户使用协同过滤\n        cf_recommendations = collaborative_filtering(user_id)\n        content_recommendations = content_based_recommendation(\n            user_profile,\n            items_features\n        )\n        # 融合两种推荐结果\n        recommendations = merge_recommendations(\n            cf_recommendations,\n            content_recommendations\n        )\n    \n    return recommendations\n```\n\n## 性能优化\n\n1. 数据预处理\n```python\ndef preprocess_data():\n    \"\"\"数据预处理优化\"\"\"\n    # 使用稀疏矩阵存储\n    sparse_matrix = csr_matrix(user_item_matrix)\n    \n    # 归一化处理\n    normalized_matrix = normalize(sparse_matrix)\n    \n    return normalized_matrix\n```\n\n2. 计算优化\n```python\ndef optimize_similarity_calculation():\n    \"\"\"相似度计算优化\"\"\"\n    # 使用近似最近邻搜索\n    ann_index = AnnoyIndex(f=vector_dim)\n    \n    # 批量计算相似度\n    with ThreadPoolExecutor() as executor:\n        similarities = list(executor.map(\n            calculate_similarity,\n            vectors\n        ))\n```\n\n## 效果评估\n\n{% note success %}\n系统上线后取得了显著效果：\n- 推荐准确率：85%\n- 用户采纳率：提升40%\n- 系统响应时间：<100ms\n{% endnote %}\n\n## 经验总结\n\n1. 数据质量至关重要\n2. 需要合理处理冷启动问题\n3. 性能优化不能忽视\n4. 持续监控和改进很重要\n\n{% note info %}\n### 分享与交流\n如果您觉得本文对您有帮助，欢迎：\n- 在下方评论区留言讨论\n- 分享给更多朋友\n- 关注我的 [GitHub](https://github.com/oliver037)\n{% endnote %} ","slug":"collaborative-filtering","published":1,"updated":"2025-02-11T08:25:12.041Z","comments":1,"layout":"post","photos":[],"_id":"cm70bo4a40001utfy2z3meysc","content":"<div class=\"note default\">\n            <h3 id=\"文章导航\"><a href=\"#文章导航\" class=\"headerlink\" title=\"文章导航\"></a>文章导航</h3><ul><li><a href=\"/\">返回首页</a></li><li><a href=\"/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/\">查看更多技术文章</a></li></ul><h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><ul><li><a href=\"/2025/02/10/data-warehouse-etl/\">数据仓库ETL流程设计与实现</a></li></ul>\n          </div>\n\n<div class=\"note info\">\n            <p>本文详细介绍如何在汽车改装领域应用协同过滤算法，实现个性化的配件推荐。</p>\n          </div>\n\n<h2 id=\"算法原理\"><a href=\"#算法原理\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h2><div class=\"note primary\">\n            <p>协同过滤算法主要分为两类：</p><ol><li>基于用户的协同过滤（User-Based CF）</li><li>基于物品的协同过滤（Item-Based CF）</li></ol>\n          </div>\n\n<h2 id=\"基于用户的协同过滤实现\"><a href=\"#基于用户的协同过滤实现\" class=\"headerlink\" title=\"基于用户的协同过滤实现\"></a>基于用户的协同过滤实现</h2><h3 id=\"相似度计算\"><a href=\"#相似度计算\" class=\"headerlink\" title=\"相似度计算\"></a>相似度计算</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_user_similarity</span>(<span class=\"params\">user_item_matrix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;计算用户之间的相似度&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用余弦相似度</span></span><br><span class=\"line\">    user_similarity = cosine_similarity(user_item_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 转换为DataFrame便于查询</span></span><br><span class=\"line\">    similarity_df = pd.DataFrame(</span><br><span class=\"line\">        user_similarity,</span><br><span class=\"line\">        index=user_item_matrix.index,</span><br><span class=\"line\">        columns=user_item_matrix.index</span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> similarity_df</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_similar_users</span>(<span class=\"params\">user_id, user_similarity, n=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取最相似的用户&quot;&quot;&quot;</span></span><br><span class=\"line\">    similar_users = user_similarity[user_id].sort_values(</span><br><span class=\"line\">        ascending=<span class=\"literal\">False</span></span><br><span class=\"line\">    )[<span class=\"number\">1</span>:n+<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> similar_users</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"推荐生成\"><a href=\"#推荐生成\" class=\"headerlink\" title=\"推荐生成\"></a>推荐生成</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">generate_recommendations</span>(<span class=\"params\">user_id, similar_users, user_item_matrix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于相似用户生成推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">    recommendations = defaultdict(<span class=\"built_in\">float</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> similar_user, similarity <span class=\"keyword\">in</span> similar_users.items():</span><br><span class=\"line\">        <span class=\"comment\"># 获取相似用户的评分记录</span></span><br><span class=\"line\">        user_ratings = user_item_matrix.loc[similar_user]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 计算加权评分</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item, rating <span class=\"keyword\">in</span> user_ratings.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> rating &gt; <span class=\"number\">0</span>:  <span class=\"comment\"># 只考虑正面评价</span></span><br><span class=\"line\">                recommendations[item] += similarity * rating</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 排序并返回推荐结果</span></span><br><span class=\"line\">    sorted_recommendations = <span class=\"built_in\">sorted</span>(</span><br><span class=\"line\">        recommendations.items(),</span><br><span class=\"line\">        key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">        reverse=<span class=\"literal\">True</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> sorted_recommendations</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基于物品的协同过滤实现\"><a href=\"#基于物品的协同过滤实现\" class=\"headerlink\" title=\"基于物品的协同过滤实现\"></a>基于物品的协同过滤实现</h2><h3 id=\"物品相似度计算\"><a href=\"#物品相似度计算\" class=\"headerlink\" title=\"物品相似度计算\"></a>物品相似度计算</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ItemBasedCF</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, n_neighbors=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.n_neighbors = n_neighbors</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = <span class=\"literal\">None</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fit</span>(<span class=\"params\">self, user_item_matrix</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;计算物品相似度矩阵&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 转置矩阵，计算物品间的相似度</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = cosine_similarity(</span><br><span class=\"line\">            user_item_matrix.T</span><br><span class=\"line\">        )</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 转换为DataFrame</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = pd.DataFrame(</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.item_similarity_matrix,</span><br><span class=\"line\">            index=user_item_matrix.columns,</span><br><span class=\"line\">            columns=user_item_matrix.columns</span><br><span class=\"line\">        )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">recommend</span>(<span class=\"params\">self, user_id, user_item_matrix</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;为用户生成推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取用户已有的配件</span></span><br><span class=\"line\">        user_items = user_item_matrix.loc[user_id]</span><br><span class=\"line\">        user_items = user_items[user_items &gt; <span class=\"number\">0</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 计算推荐分数</span></span><br><span class=\"line\">        recommendations = defaultdict(<span class=\"built_in\">float</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> item, rating <span class=\"keyword\">in</span> user_items.items():</span><br><span class=\"line\">            <span class=\"comment\"># 获取相似物品</span></span><br><span class=\"line\">            similar_items = <span class=\"variable language_\">self</span>.item_similarity_matrix[item]</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 计算加权评分</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> similar_item, similarity <span class=\"keyword\">in</span> similar_items.items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> similar_item <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> user_items:</span><br><span class=\"line\">                    recommendations[similar_item] += similarity * rating</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">sorted</span>(</span><br><span class=\"line\">            recommendations.items(),</span><br><span class=\"line\">            key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">            reverse=<span class=\"literal\">True</span></span><br><span class=\"line\">        )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"冷启动问题解决\"><a href=\"#冷启动问题解决\" class=\"headerlink\" title=\"冷启动问题解决\"></a>冷启动问题解决</h2><h3 id=\"基于内容的推荐\"><a href=\"#基于内容的推荐\" class=\"headerlink\" title=\"基于内容的推荐\"></a>基于内容的推荐</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">content_based_recommendation</span>(<span class=\"params\">user_profile, items_features</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于内容的推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 提取用户特征</span></span><br><span class=\"line\">    user_features = extract_user_features(user_profile)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 计算物品相似度</span></span><br><span class=\"line\">    similarities = cosine_similarity(</span><br><span class=\"line\">        user_features.reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>),</span><br><span class=\"line\">        items_features</span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 返回最相似的物品</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.argsort(similarities[<span class=\"number\">0</span>])[::-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"混合推荐策略\"><a href=\"#混合推荐策略\" class=\"headerlink\" title=\"混合推荐策略\"></a>混合推荐策略</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hybrid_recommendation</span>(<span class=\"params\">user_id, user_profile</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;混合推荐策略&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_new_user(user_id):</span><br><span class=\"line\">        <span class=\"comment\"># 新用户使用基于内容的推荐</span></span><br><span class=\"line\">        recommendations = content_based_recommendation(</span><br><span class=\"line\">            user_profile,</span><br><span class=\"line\">            items_features</span><br><span class=\"line\">        )</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 老用户使用协同过滤</span></span><br><span class=\"line\">        cf_recommendations = collaborative_filtering(user_id)</span><br><span class=\"line\">        content_recommendations = content_based_recommendation(</span><br><span class=\"line\">            user_profile,</span><br><span class=\"line\">            items_features</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"comment\"># 融合两种推荐结果</span></span><br><span class=\"line\">        recommendations = merge_recommendations(</span><br><span class=\"line\">            cf_recommendations,</span><br><span class=\"line\">            content_recommendations</span><br><span class=\"line\">        )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> recommendations</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><ol>\n<li><p>数据预处理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">preprocess_data</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;数据预处理优化&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用稀疏矩阵存储</span></span><br><span class=\"line\">    sparse_matrix = csr_matrix(user_item_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 归一化处理</span></span><br><span class=\"line\">    normalized_matrix = normalize(sparse_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> normalized_matrix</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算优化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">optimize_similarity_calculation</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;相似度计算优化&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用近似最近邻搜索</span></span><br><span class=\"line\">    ann_index = AnnoyIndex(f=vector_dim)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 批量计算相似度</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor() <span class=\"keyword\">as</span> executor:</span><br><span class=\"line\">        similarities = <span class=\"built_in\">list</span>(executor.<span class=\"built_in\">map</span>(</span><br><span class=\"line\">            calculate_similarity,</span><br><span class=\"line\">            vectors</span><br><span class=\"line\">        ))</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"效果评估\"><a href=\"#效果评估\" class=\"headerlink\" title=\"效果评估\"></a>效果评估</h2><div class=\"note success\">\n            <p>系统上线后取得了显著效果：</p><ul><li>推荐准确率：85%</li><li>用户采纳率：提升40%</li><li>系统响应时间：&lt;100ms</li></ul>\n          </div>\n\n<h2 id=\"经验总结\"><a href=\"#经验总结\" class=\"headerlink\" title=\"经验总结\"></a>经验总结</h2><ol>\n<li>数据质量至关重要</li>\n<li>需要合理处理冷启动问题</li>\n<li>性能优化不能忽视</li>\n<li>持续监控和改进很重要</li>\n</ol>\n<div class=\"note info\">\n            <h3 id=\"分享与交流\"><a href=\"#分享与交流\" class=\"headerlink\" title=\"分享与交流\"></a>分享与交流</h3><p>如果您觉得本文对您有帮助，欢迎：</p><ul><li>在下方评论区留言讨论</li><li>分享给更多朋友</li><li>关注我的 <a href=\"https://github.com/oliver037\">GitHub</a></li></ul>\n          </div> ","excerpt":"","more":"<div class=\"note default\">\n            <h3 id=\"文章导航\"><a href=\"#文章导航\" class=\"headerlink\" title=\"文章导航\"></a>文章导航</h3><ul><li><a href=\"/\">返回首页</a></li><li><a href=\"/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/\">查看更多技术文章</a></li></ul><h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><ul><li><a href=\"/2025/02/10/data-warehouse-etl/\">数据仓库ETL流程设计与实现</a></li></ul>\n          </div>\n\n<div class=\"note info\">\n            <p>本文详细介绍如何在汽车改装领域应用协同过滤算法，实现个性化的配件推荐。</p>\n          </div>\n\n<h2 id=\"算法原理\"><a href=\"#算法原理\" class=\"headerlink\" title=\"算法原理\"></a>算法原理</h2><div class=\"note primary\">\n            <p>协同过滤算法主要分为两类：</p><ol><li>基于用户的协同过滤（User-Based CF）</li><li>基于物品的协同过滤（Item-Based CF）</li></ol>\n          </div>\n\n<h2 id=\"基于用户的协同过滤实现\"><a href=\"#基于用户的协同过滤实现\" class=\"headerlink\" title=\"基于用户的协同过滤实现\"></a>基于用户的协同过滤实现</h2><h3 id=\"相似度计算\"><a href=\"#相似度计算\" class=\"headerlink\" title=\"相似度计算\"></a>相似度计算</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_user_similarity</span>(<span class=\"params\">user_item_matrix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;计算用户之间的相似度&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用余弦相似度</span></span><br><span class=\"line\">    user_similarity = cosine_similarity(user_item_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 转换为DataFrame便于查询</span></span><br><span class=\"line\">    similarity_df = pd.DataFrame(</span><br><span class=\"line\">        user_similarity,</span><br><span class=\"line\">        index=user_item_matrix.index,</span><br><span class=\"line\">        columns=user_item_matrix.index</span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> similarity_df</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_similar_users</span>(<span class=\"params\">user_id, user_similarity, n=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取最相似的用户&quot;&quot;&quot;</span></span><br><span class=\"line\">    similar_users = user_similarity[user_id].sort_values(</span><br><span class=\"line\">        ascending=<span class=\"literal\">False</span></span><br><span class=\"line\">    )[<span class=\"number\">1</span>:n+<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> similar_users</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"推荐生成\"><a href=\"#推荐生成\" class=\"headerlink\" title=\"推荐生成\"></a>推荐生成</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">generate_recommendations</span>(<span class=\"params\">user_id, similar_users, user_item_matrix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于相似用户生成推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">    recommendations = defaultdict(<span class=\"built_in\">float</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> similar_user, similarity <span class=\"keyword\">in</span> similar_users.items():</span><br><span class=\"line\">        <span class=\"comment\"># 获取相似用户的评分记录</span></span><br><span class=\"line\">        user_ratings = user_item_matrix.loc[similar_user]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 计算加权评分</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item, rating <span class=\"keyword\">in</span> user_ratings.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> rating &gt; <span class=\"number\">0</span>:  <span class=\"comment\"># 只考虑正面评价</span></span><br><span class=\"line\">                recommendations[item] += similarity * rating</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 排序并返回推荐结果</span></span><br><span class=\"line\">    sorted_recommendations = <span class=\"built_in\">sorted</span>(</span><br><span class=\"line\">        recommendations.items(),</span><br><span class=\"line\">        key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">        reverse=<span class=\"literal\">True</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> sorted_recommendations</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基于物品的协同过滤实现\"><a href=\"#基于物品的协同过滤实现\" class=\"headerlink\" title=\"基于物品的协同过滤实现\"></a>基于物品的协同过滤实现</h2><h3 id=\"物品相似度计算\"><a href=\"#物品相似度计算\" class=\"headerlink\" title=\"物品相似度计算\"></a>物品相似度计算</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ItemBasedCF</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, n_neighbors=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.n_neighbors = n_neighbors</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = <span class=\"literal\">None</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fit</span>(<span class=\"params\">self, user_item_matrix</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;计算物品相似度矩阵&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 转置矩阵，计算物品间的相似度</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = cosine_similarity(</span><br><span class=\"line\">            user_item_matrix.T</span><br><span class=\"line\">        )</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 转换为DataFrame</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.item_similarity_matrix = pd.DataFrame(</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.item_similarity_matrix,</span><br><span class=\"line\">            index=user_item_matrix.columns,</span><br><span class=\"line\">            columns=user_item_matrix.columns</span><br><span class=\"line\">        )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">recommend</span>(<span class=\"params\">self, user_id, user_item_matrix</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;为用户生成推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取用户已有的配件</span></span><br><span class=\"line\">        user_items = user_item_matrix.loc[user_id]</span><br><span class=\"line\">        user_items = user_items[user_items &gt; <span class=\"number\">0</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 计算推荐分数</span></span><br><span class=\"line\">        recommendations = defaultdict(<span class=\"built_in\">float</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> item, rating <span class=\"keyword\">in</span> user_items.items():</span><br><span class=\"line\">            <span class=\"comment\"># 获取相似物品</span></span><br><span class=\"line\">            similar_items = <span class=\"variable language_\">self</span>.item_similarity_matrix[item]</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 计算加权评分</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> similar_item, similarity <span class=\"keyword\">in</span> similar_items.items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> similar_item <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> user_items:</span><br><span class=\"line\">                    recommendations[similar_item] += similarity * rating</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">sorted</span>(</span><br><span class=\"line\">            recommendations.items(),</span><br><span class=\"line\">            key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">            reverse=<span class=\"literal\">True</span></span><br><span class=\"line\">        )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"冷启动问题解决\"><a href=\"#冷启动问题解决\" class=\"headerlink\" title=\"冷启动问题解决\"></a>冷启动问题解决</h2><h3 id=\"基于内容的推荐\"><a href=\"#基于内容的推荐\" class=\"headerlink\" title=\"基于内容的推荐\"></a>基于内容的推荐</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">content_based_recommendation</span>(<span class=\"params\">user_profile, items_features</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;基于内容的推荐&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 提取用户特征</span></span><br><span class=\"line\">    user_features = extract_user_features(user_profile)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 计算物品相似度</span></span><br><span class=\"line\">    similarities = cosine_similarity(</span><br><span class=\"line\">        user_features.reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>),</span><br><span class=\"line\">        items_features</span><br><span class=\"line\">    )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 返回最相似的物品</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.argsort(similarities[<span class=\"number\">0</span>])[::-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"混合推荐策略\"><a href=\"#混合推荐策略\" class=\"headerlink\" title=\"混合推荐策略\"></a>混合推荐策略</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hybrid_recommendation</span>(<span class=\"params\">user_id, user_profile</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;混合推荐策略&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_new_user(user_id):</span><br><span class=\"line\">        <span class=\"comment\"># 新用户使用基于内容的推荐</span></span><br><span class=\"line\">        recommendations = content_based_recommendation(</span><br><span class=\"line\">            user_profile,</span><br><span class=\"line\">            items_features</span><br><span class=\"line\">        )</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 老用户使用协同过滤</span></span><br><span class=\"line\">        cf_recommendations = collaborative_filtering(user_id)</span><br><span class=\"line\">        content_recommendations = content_based_recommendation(</span><br><span class=\"line\">            user_profile,</span><br><span class=\"line\">            items_features</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"comment\"># 融合两种推荐结果</span></span><br><span class=\"line\">        recommendations = merge_recommendations(</span><br><span class=\"line\">            cf_recommendations,</span><br><span class=\"line\">            content_recommendations</span><br><span class=\"line\">        )</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> recommendations</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><ol>\n<li><p>数据预处理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">preprocess_data</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;数据预处理优化&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用稀疏矩阵存储</span></span><br><span class=\"line\">    sparse_matrix = csr_matrix(user_item_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 归一化处理</span></span><br><span class=\"line\">    normalized_matrix = normalize(sparse_matrix)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> normalized_matrix</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算优化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">optimize_similarity_calculation</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;相似度计算优化&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用近似最近邻搜索</span></span><br><span class=\"line\">    ann_index = AnnoyIndex(f=vector_dim)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 批量计算相似度</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor() <span class=\"keyword\">as</span> executor:</span><br><span class=\"line\">        similarities = <span class=\"built_in\">list</span>(executor.<span class=\"built_in\">map</span>(</span><br><span class=\"line\">            calculate_similarity,</span><br><span class=\"line\">            vectors</span><br><span class=\"line\">        ))</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"效果评估\"><a href=\"#效果评估\" class=\"headerlink\" title=\"效果评估\"></a>效果评估</h2><div class=\"note success\">\n            <p>系统上线后取得了显著效果：</p><ul><li>推荐准确率：85%</li><li>用户采纳率：提升40%</li><li>系统响应时间：&lt;100ms</li></ul>\n          </div>\n\n<h2 id=\"经验总结\"><a href=\"#经验总结\" class=\"headerlink\" title=\"经验总结\"></a>经验总结</h2><ol>\n<li>数据质量至关重要</li>\n<li>需要合理处理冷启动问题</li>\n<li>性能优化不能忽视</li>\n<li>持续监控和改进很重要</li>\n</ol>\n<div class=\"note info\">\n            <h3 id=\"分享与交流\"><a href=\"#分享与交流\" class=\"headerlink\" title=\"分享与交流\"></a>分享与交流</h3><p>如果您觉得本文对您有帮助，欢迎：</p><ul><li>在下方评论区留言讨论</li><li>分享给更多朋友</li><li>关注我的 <a href=\"https://github.com/oliver037\">GitHub</a></li></ul>\n          </div> "},{"title":"数据仓库ETL流程设计与实现","date":"2025-02-09T16:00:00.000Z","_content":"\n{% note default %}\n### 文章导航\n- [返回首页](/)\n- [查看更多技术文章](/categories/技术分享/)\n\n### 相关文章\n- [协同过滤在汽车改装推荐中的应用](/2025/02/09/collaborative-filtering/)\n{% endnote %}\n\n{% note info %}\n本文详细介绍数据仓库ETL流程的设计与实现，包括数据抽取、转换、加载的最佳实践。\n{% endnote %}\n\n## 架构设计\n\n{% note primary %}\n整体采用分层架构：\n1. ODS层：原始数据层\n2. DWD层：明细数据层\n3. DWS层：服务数据层\n4. ADS层：应用数据层\n{% endnote %}\n\n## ETL流程实现\n\n### 数据抽取\n```python\ndef extract_data(source_config):\n    \"\"\"\n    数据抽取模块\n    \"\"\"\n    try:\n        # 建立数据源连接\n        conn = create_connection(source_config)\n        \n        # 增量抽取逻辑\n        last_etl_time = get_last_etl_time()\n        sql = f\"\"\"\n            SELECT * FROM source_table \n            WHERE update_time > '{last_etl_time}'\n        \"\"\"\n        \n        # 执行抽取\n        df = pd.read_sql(sql, conn)\n        return df\n    \n    except Exception as e:\n        logging.error(f\"数据抽取失败: {str(e)}\")\n        raise\n```\n\n### 数据转换\n```python\ndef transform_data(df):\n    \"\"\"\n    数据清洗转换\n    \"\"\"\n    # 数据类型转换\n    df['create_time'] = pd.to_datetime(df['create_time'])\n    \n    # 空值处理\n    df['category'] = df['category'].fillna('未分类')\n    \n    # 业务规则转换\n    df['status'] = df['status'].map({\n        0: '待处理',\n        1: '处理中',\n        2: '已完成'\n    })\n    \n    return df\n```\n\n### 数据加载\n```python\ndef load_data(df, target_config):\n    \"\"\"\n    数据加载到目标表\n    \"\"\"\n    try:\n        # 建立目标库连接\n        engine = create_engine(target_config)\n        \n        # 分批写入\n        df.to_sql(\n            'target_table',\n            engine,\n            if_exists='append',\n            index=False,\n            chunksize=1000\n        )\n        \n    except Exception as e:\n        logging.error(f\"数据加载失败: {str(e)}\")\n        raise\n```\n\n## 调度管理\n\n使用Airflow进行任务调度：\n\n```python\nfrom airflow import DAG\nfrom airflow.operators.python_operator import PythonOperator\n\ndag = DAG(\n    'etl_pipeline',\n    schedule_interval='0 2 * * *',  # 每天凌晨2点执行\n    start_date=datetime(2024, 1, 1)\n)\n\nextract_task = PythonOperator(\n    task_id='extract_data',\n    python_callable=extract_data,\n    dag=dag\n)\n\ntransform_task = PythonOperator(\n    task_id='transform_data',\n    python_callable=transform_data,\n    dag=dag\n)\n\nload_task = PythonOperator(\n    task_id='load_data',\n    python_callable=load_data,\n    dag=dag\n)\n\nextract_task >> transform_task >> load_task\n```\n\n## 监控告警\n\n实现了完整的监控告警机制：\n\n1. 数据质量监控\n   - 空值检查\n   - 重复值检查\n   - 数据一致性校验\n\n2. 任务执行监控\n   - 运行状态\n   - 执行时长\n   - 错误日志\n\n3. 告警通知\n   - 邮件通知\n   - 企业微信通知\n   - 短信通知\n\n## 性能优化\n\n主要从以下几个方面进行了优化：\n\n1. 分批处理\n2. 并行计算\n3. 索引优化\n4. 资源控制\n\n## 实践总结\n\n1. 保证数据质量是首要任务\n2. 合理的分层设计很重要\n3. 监控告警要及时准确\n4. 持续优化性能指标 ","source":"_posts/data-warehouse-etl.md","raw":"---\ntitle: 数据仓库ETL流程设计与实现\ndate: 2025-02-10\ncategories: \n- 技术分享\ntags:\n- ETL\n- 数据仓库\n- Python\n- Airflow\n---\n\n{% note default %}\n### 文章导航\n- [返回首页](/)\n- [查看更多技术文章](/categories/技术分享/)\n\n### 相关文章\n- [协同过滤在汽车改装推荐中的应用](/2025/02/09/collaborative-filtering/)\n{% endnote %}\n\n{% note info %}\n本文详细介绍数据仓库ETL流程的设计与实现，包括数据抽取、转换、加载的最佳实践。\n{% endnote %}\n\n## 架构设计\n\n{% note primary %}\n整体采用分层架构：\n1. ODS层：原始数据层\n2. DWD层：明细数据层\n3. DWS层：服务数据层\n4. ADS层：应用数据层\n{% endnote %}\n\n## ETL流程实现\n\n### 数据抽取\n```python\ndef extract_data(source_config):\n    \"\"\"\n    数据抽取模块\n    \"\"\"\n    try:\n        # 建立数据源连接\n        conn = create_connection(source_config)\n        \n        # 增量抽取逻辑\n        last_etl_time = get_last_etl_time()\n        sql = f\"\"\"\n            SELECT * FROM source_table \n            WHERE update_time > '{last_etl_time}'\n        \"\"\"\n        \n        # 执行抽取\n        df = pd.read_sql(sql, conn)\n        return df\n    \n    except Exception as e:\n        logging.error(f\"数据抽取失败: {str(e)}\")\n        raise\n```\n\n### 数据转换\n```python\ndef transform_data(df):\n    \"\"\"\n    数据清洗转换\n    \"\"\"\n    # 数据类型转换\n    df['create_time'] = pd.to_datetime(df['create_time'])\n    \n    # 空值处理\n    df['category'] = df['category'].fillna('未分类')\n    \n    # 业务规则转换\n    df['status'] = df['status'].map({\n        0: '待处理',\n        1: '处理中',\n        2: '已完成'\n    })\n    \n    return df\n```\n\n### 数据加载\n```python\ndef load_data(df, target_config):\n    \"\"\"\n    数据加载到目标表\n    \"\"\"\n    try:\n        # 建立目标库连接\n        engine = create_engine(target_config)\n        \n        # 分批写入\n        df.to_sql(\n            'target_table',\n            engine,\n            if_exists='append',\n            index=False,\n            chunksize=1000\n        )\n        \n    except Exception as e:\n        logging.error(f\"数据加载失败: {str(e)}\")\n        raise\n```\n\n## 调度管理\n\n使用Airflow进行任务调度：\n\n```python\nfrom airflow import DAG\nfrom airflow.operators.python_operator import PythonOperator\n\ndag = DAG(\n    'etl_pipeline',\n    schedule_interval='0 2 * * *',  # 每天凌晨2点执行\n    start_date=datetime(2024, 1, 1)\n)\n\nextract_task = PythonOperator(\n    task_id='extract_data',\n    python_callable=extract_data,\n    dag=dag\n)\n\ntransform_task = PythonOperator(\n    task_id='transform_data',\n    python_callable=transform_data,\n    dag=dag\n)\n\nload_task = PythonOperator(\n    task_id='load_data',\n    python_callable=load_data,\n    dag=dag\n)\n\nextract_task >> transform_task >> load_task\n```\n\n## 监控告警\n\n实现了完整的监控告警机制：\n\n1. 数据质量监控\n   - 空值检查\n   - 重复值检查\n   - 数据一致性校验\n\n2. 任务执行监控\n   - 运行状态\n   - 执行时长\n   - 错误日志\n\n3. 告警通知\n   - 邮件通知\n   - 企业微信通知\n   - 短信通知\n\n## 性能优化\n\n主要从以下几个方面进行了优化：\n\n1. 分批处理\n2. 并行计算\n3. 索引优化\n4. 资源控制\n\n## 实践总结\n\n1. 保证数据质量是首要任务\n2. 合理的分层设计很重要\n3. 监控告警要及时准确\n4. 持续优化性能指标 ","slug":"data-warehouse-etl","published":1,"updated":"2025-02-11T08:25:12.041Z","comments":1,"layout":"post","photos":[],"_id":"cm70bo4a80003utfyg583ggmm","content":"<div class=\"note default\">\n            <h3 id=\"文章导航\"><a href=\"#文章导航\" class=\"headerlink\" title=\"文章导航\"></a>文章导航</h3><ul><li><a href=\"/\">返回首页</a></li><li><a href=\"/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/\">查看更多技术文章</a></li></ul><h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><ul><li><a href=\"/2025/02/09/collaborative-filtering/\">协同过滤在汽车改装推荐中的应用</a></li></ul>\n          </div>\n\n<div class=\"note info\">\n            <p>本文详细介绍数据仓库ETL流程的设计与实现，包括数据抽取、转换、加载的最佳实践。</p>\n          </div>\n\n<h2 id=\"架构设计\"><a href=\"#架构设计\" class=\"headerlink\" title=\"架构设计\"></a>架构设计</h2><div class=\"note primary\">\n            <p>整体采用分层架构：</p><ol><li>ODS层：原始数据层</li><li>DWD层：明细数据层</li><li>DWS层：服务数据层</li><li>ADS层：应用数据层</li></ol>\n          </div>\n\n<h2 id=\"ETL流程实现\"><a href=\"#ETL流程实现\" class=\"headerlink\" title=\"ETL流程实现\"></a>ETL流程实现</h2><h3 id=\"数据抽取\"><a href=\"#数据抽取\" class=\"headerlink\" title=\"数据抽取\"></a>数据抽取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_data</span>(<span class=\"params\">source_config</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据抽取模块</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 建立数据源连接</span></span><br><span class=\"line\">        conn = create_connection(source_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 增量抽取逻辑</span></span><br><span class=\"line\">        last_etl_time = get_last_etl_time()</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">            SELECT * FROM source_table </span></span><br><span class=\"line\"><span class=\"string\">            WHERE update_time &gt; &#x27;<span class=\"subst\">&#123;last_etl_time&#125;</span>&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 执行抽取</span></span><br><span class=\"line\">        df = pd.read_sql(sql, conn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> df</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        logging.error(<span class=\"string\">f&quot;数据抽取失败: <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">raise</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据转换\"><a href=\"#数据转换\" class=\"headerlink\" title=\"数据转换\"></a>数据转换</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">transform_data</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据清洗转换</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 数据类型转换</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;create_time&#x27;</span>] = pd.to_datetime(df[<span class=\"string\">&#x27;create_time&#x27;</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 空值处理</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;category&#x27;</span>] = df[<span class=\"string\">&#x27;category&#x27;</span>].fillna(<span class=\"string\">&#x27;未分类&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 业务规则转换</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;status&#x27;</span>] = df[<span class=\"string\">&#x27;status&#x27;</span>].<span class=\"built_in\">map</span>(&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;待处理&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">1</span>: <span class=\"string\">&#x27;处理中&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">2</span>: <span class=\"string\">&#x27;已完成&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> df</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据加载\"><a href=\"#数据加载\" class=\"headerlink\" title=\"数据加载\"></a>数据加载</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_data</span>(<span class=\"params\">df, target_config</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据加载到目标表</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 建立目标库连接</span></span><br><span class=\"line\">        engine = create_engine(target_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 分批写入</span></span><br><span class=\"line\">        df.to_sql(</span><br><span class=\"line\">            <span class=\"string\">&#x27;target_table&#x27;</span>,</span><br><span class=\"line\">            engine,</span><br><span class=\"line\">            if_exists=<span class=\"string\">&#x27;append&#x27;</span>,</span><br><span class=\"line\">            index=<span class=\"literal\">False</span>,</span><br><span class=\"line\">            chunksize=<span class=\"number\">1000</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        logging.error(<span class=\"string\">f&quot;数据加载失败: <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">raise</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"调度管理\"><a href=\"#调度管理\" class=\"headerlink\" title=\"调度管理\"></a>调度管理</h2><p>使用Airflow进行任务调度：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> airflow <span class=\"keyword\">import</span> DAG</span><br><span class=\"line\"><span class=\"keyword\">from</span> airflow.operators.python_operator <span class=\"keyword\">import</span> PythonOperator</span><br><span class=\"line\"></span><br><span class=\"line\">dag = DAG(</span><br><span class=\"line\">    <span class=\"string\">&#x27;etl_pipeline&#x27;</span>,</span><br><span class=\"line\">    schedule_interval=<span class=\"string\">&#x27;0 2 * * *&#x27;</span>,  <span class=\"comment\"># 每天凌晨2点执行</span></span><br><span class=\"line\">    start_date=datetime(<span class=\"number\">2024</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">extract_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;extract_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=extract_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">transform_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;transform_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=transform_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">load_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;load_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=load_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">extract_task &gt;&gt; transform_task &gt;&gt; load_task</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"监控告警\"><a href=\"#监控告警\" class=\"headerlink\" title=\"监控告警\"></a>监控告警</h2><p>实现了完整的监控告警机制：</p>\n<ol>\n<li><p>数据质量监控</p>\n<ul>\n<li>空值检查</li>\n<li>重复值检查</li>\n<li>数据一致性校验</li>\n</ul>\n</li>\n<li><p>任务执行监控</p>\n<ul>\n<li>运行状态</li>\n<li>执行时长</li>\n<li>错误日志</li>\n</ul>\n</li>\n<li><p>告警通知</p>\n<ul>\n<li>邮件通知</li>\n<li>企业微信通知</li>\n<li>短信通知</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><p>主要从以下几个方面进行了优化：</p>\n<ol>\n<li>分批处理</li>\n<li>并行计算</li>\n<li>索引优化</li>\n<li>资源控制</li>\n</ol>\n<h2 id=\"实践总结\"><a href=\"#实践总结\" class=\"headerlink\" title=\"实践总结\"></a>实践总结</h2><ol>\n<li>保证数据质量是首要任务</li>\n<li>合理的分层设计很重要</li>\n<li>监控告警要及时准确</li>\n<li>持续优化性能指标</li>\n</ol>\n","excerpt":"","more":"<div class=\"note default\">\n            <h3 id=\"文章导航\"><a href=\"#文章导航\" class=\"headerlink\" title=\"文章导航\"></a>文章导航</h3><ul><li><a href=\"/\">返回首页</a></li><li><a href=\"/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/\">查看更多技术文章</a></li></ul><h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><ul><li><a href=\"/2025/02/09/collaborative-filtering/\">协同过滤在汽车改装推荐中的应用</a></li></ul>\n          </div>\n\n<div class=\"note info\">\n            <p>本文详细介绍数据仓库ETL流程的设计与实现，包括数据抽取、转换、加载的最佳实践。</p>\n          </div>\n\n<h2 id=\"架构设计\"><a href=\"#架构设计\" class=\"headerlink\" title=\"架构设计\"></a>架构设计</h2><div class=\"note primary\">\n            <p>整体采用分层架构：</p><ol><li>ODS层：原始数据层</li><li>DWD层：明细数据层</li><li>DWS层：服务数据层</li><li>ADS层：应用数据层</li></ol>\n          </div>\n\n<h2 id=\"ETL流程实现\"><a href=\"#ETL流程实现\" class=\"headerlink\" title=\"ETL流程实现\"></a>ETL流程实现</h2><h3 id=\"数据抽取\"><a href=\"#数据抽取\" class=\"headerlink\" title=\"数据抽取\"></a>数据抽取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extract_data</span>(<span class=\"params\">source_config</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据抽取模块</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 建立数据源连接</span></span><br><span class=\"line\">        conn = create_connection(source_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 增量抽取逻辑</span></span><br><span class=\"line\">        last_etl_time = get_last_etl_time()</span><br><span class=\"line\">        sql = <span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">            SELECT * FROM source_table </span></span><br><span class=\"line\"><span class=\"string\">            WHERE update_time &gt; &#x27;<span class=\"subst\">&#123;last_etl_time&#125;</span>&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 执行抽取</span></span><br><span class=\"line\">        df = pd.read_sql(sql, conn)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> df</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        logging.error(<span class=\"string\">f&quot;数据抽取失败: <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">raise</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据转换\"><a href=\"#数据转换\" class=\"headerlink\" title=\"数据转换\"></a>数据转换</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">transform_data</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据清洗转换</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 数据类型转换</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;create_time&#x27;</span>] = pd.to_datetime(df[<span class=\"string\">&#x27;create_time&#x27;</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 空值处理</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;category&#x27;</span>] = df[<span class=\"string\">&#x27;category&#x27;</span>].fillna(<span class=\"string\">&#x27;未分类&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 业务规则转换</span></span><br><span class=\"line\">    df[<span class=\"string\">&#x27;status&#x27;</span>] = df[<span class=\"string\">&#x27;status&#x27;</span>].<span class=\"built_in\">map</span>(&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;待处理&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">1</span>: <span class=\"string\">&#x27;处理中&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">2</span>: <span class=\"string\">&#x27;已完成&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> df</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据加载\"><a href=\"#数据加载\" class=\"headerlink\" title=\"数据加载\"></a>数据加载</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_data</span>(<span class=\"params\">df, target_config</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    数据加载到目标表</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 建立目标库连接</span></span><br><span class=\"line\">        engine = create_engine(target_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 分批写入</span></span><br><span class=\"line\">        df.to_sql(</span><br><span class=\"line\">            <span class=\"string\">&#x27;target_table&#x27;</span>,</span><br><span class=\"line\">            engine,</span><br><span class=\"line\">            if_exists=<span class=\"string\">&#x27;append&#x27;</span>,</span><br><span class=\"line\">            index=<span class=\"literal\">False</span>,</span><br><span class=\"line\">            chunksize=<span class=\"number\">1000</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        logging.error(<span class=\"string\">f&quot;数据加载失败: <span class=\"subst\">&#123;<span class=\"built_in\">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">raise</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"调度管理\"><a href=\"#调度管理\" class=\"headerlink\" title=\"调度管理\"></a>调度管理</h2><p>使用Airflow进行任务调度：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> airflow <span class=\"keyword\">import</span> DAG</span><br><span class=\"line\"><span class=\"keyword\">from</span> airflow.operators.python_operator <span class=\"keyword\">import</span> PythonOperator</span><br><span class=\"line\"></span><br><span class=\"line\">dag = DAG(</span><br><span class=\"line\">    <span class=\"string\">&#x27;etl_pipeline&#x27;</span>,</span><br><span class=\"line\">    schedule_interval=<span class=\"string\">&#x27;0 2 * * *&#x27;</span>,  <span class=\"comment\"># 每天凌晨2点执行</span></span><br><span class=\"line\">    start_date=datetime(<span class=\"number\">2024</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">extract_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;extract_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=extract_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">transform_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;transform_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=transform_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">load_task = PythonOperator(</span><br><span class=\"line\">    task_id=<span class=\"string\">&#x27;load_data&#x27;</span>,</span><br><span class=\"line\">    python_callable=load_data,</span><br><span class=\"line\">    dag=dag</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">extract_task &gt;&gt; transform_task &gt;&gt; load_task</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"监控告警\"><a href=\"#监控告警\" class=\"headerlink\" title=\"监控告警\"></a>监控告警</h2><p>实现了完整的监控告警机制：</p>\n<ol>\n<li><p>数据质量监控</p>\n<ul>\n<li>空值检查</li>\n<li>重复值检查</li>\n<li>数据一致性校验</li>\n</ul>\n</li>\n<li><p>任务执行监控</p>\n<ul>\n<li>运行状态</li>\n<li>执行时长</li>\n<li>错误日志</li>\n</ul>\n</li>\n<li><p>告警通知</p>\n<ul>\n<li>邮件通知</li>\n<li>企业微信通知</li>\n<li>短信通知</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><p>主要从以下几个方面进行了优化：</p>\n<ol>\n<li>分批处理</li>\n<li>并行计算</li>\n<li>索引优化</li>\n<li>资源控制</li>\n</ol>\n<h2 id=\"实践总结\"><a href=\"#实践总结\" class=\"headerlink\" title=\"实践总结\"></a>实践总结</h2><ol>\n<li>保证数据质量是首要任务</li>\n<li>合理的分层设计很重要</li>\n<li>监控告警要及时准确</li>\n<li>持续优化性能指标</li>\n</ol>\n"},{"title":"关于我","date":"2025-02-10T16:00:00.000Z","_content":"\n{% note info %}\n> 脚踏实地，持续精进，用技术改变生活\n{% endnote %}\n\n## <i class=\"fas fa-terminal\"></i> 终端简介\n\n{% codeblock Terminal lang:bash %}\n> whoami\n王梦琦 | Full Stack Developer\n\n> cat about.txt\n热爱编程，专注于Web开发和人工智能领域\n擅长后端开发，对分布式系统和云原生技术充满热情\n\n> ls skills/\nbackend/  database/  devops/  tools/\n{% endcodeblock %}\n\n## <i class=\"fas fa-graduation-cap\"></i> 教育背景\n\n{% note default %}\n**北京城市学院** | 大数据与互联网专业 | 2021-2025\n- 主修课程：Java编程、数据结构、计算机网络、数据库系统\n- GPA：3.8/4.0\n{% endnote %}\n\n## <i class=\"fas fa-briefcase\"></i> 实习经历\n\n{% tabs experience %}\n<!-- tab 超星图书馆 -->\n{% codeblock 后端开发工程师 | 2023.07 - 2023.09 lang:json %}\n{\n  \"responsibilities\": [\n    \"参与核心业务模块开发\",\n    \"优化系统性能\",\n    \"数据库设计与维护\"\n  ],\n  \"achievements\": [\n    \"系统性能提升30%\",\n    \"重构核心模块\",\n    \"部分接口实现\"\n  ]\n}\n{% endcodeblock %}\n<!-- endtab -->\n\n<!-- tab 神州数码（滴滴外包） -->\n{% codeblock 运维工程师 | 2024.08 - 2025.01 lang:json %}\n{\n  \"responsibilities\": [\n    \"系统运维\",\n    \"服务器管理\",\n    \"监控系统维护\"\n  ],\n  \"achievements\": [\n    \"构建监控平台\",\n    \"优化部署流程\",\n    \"提升系统稳定性\"\n  ]\n}\n{% endcodeblock %}\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-code\"></i> 技术栈\n\n{% tabs tech-stack %}\n<!-- tab 后端开发 -->\n- Java / Spring Boot / MyBatis\n- RESTful API 设计\n- 微服务架构\n<!-- endtab -->\n\n<!-- tab 数据库 -->\n- MySQL / Redis / MongoDB\n- 数据库优化\n- 缓存策略\n<!-- endtab -->\n\n<!-- tab 运维工具 -->\n- Docker / Nginx / Jenkins\n- Linux 系统管理\n- CI/CD 流程\n<!-- endtab -->\n\n<!-- tab 开发工具 -->\n- Git / Maven / IDEA\n- Postman / Swagger\n- JMeter\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-project-diagram\"></i> 项目经验\n\n{% note success %}\n### 数据仓库ETL平台\n\n**技术栈：** Python, Airflow, MySQL, Redis, Kafka\n\n**核心功能：**\n- 数据抽取转换加载\n- 任务调度管理\n- 数据质量监控\n- 性能优化管理\n\n**项目亮点：**\n- 处理效率提升200%\n- 数据准确率达99.9%\n- 监控覆盖率100%\n{% endnote %}\n\n{% note success %}\n### 汽车改装推荐系统\n\n**技术栈：** Spring Boot, Python, TensorFlow, MySQL\n\n**核心功能：**\n- 智能推荐算法\n- 合法性检测\n- 性能优化\n- 用户行为分析\n\n**项目亮点：**\n- 推荐准确率提升30%\n- 系统响应时间优化50%\n- 用户满意度提升40%\n{% endnote %}\n\n## <i class=\"fas fa-user-circle\"></i> 个人特点\n\n{% tabs traits %}\n<!-- tab 技术热情 -->\n- 热爱技术，持续学习\n- 关注技术发展趋势\n- 积极参与技术社区\n<!-- endtab -->\n\n<!-- tab 团队协作 -->\n- 良好的沟通能力\n- 积极主动的工作态度\n- 优秀的问题解决能力\n<!-- endtab -->\n\n<!-- tab 代码品质 -->\n- 注重代码质量\n- 追求优雅的设计\n- 编写完善的文档\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-road\"></i> 职业规划\n\n{% note primary %}\n1. 深入研究分布式系统\n2. 提升架构设计能力\n3. 探索云原生技术\n4. 贡献开源项目\n{% endnote %}\n\n## <i class=\"fas fa-address-card\"></i> 联系方式\n\n{% tabs contact %}\n<!-- tab 邮箱 -->\n<i class=\"fas fa-envelope\"></i> 1419235897@qq.com\n<!-- endtab -->\n\n<!-- tab 电话 -->\n<i class=\"fas fa-phone\"></i> 15811534195\n<!-- endtab -->\n\n<!-- tab GitHub -->\n<i class=\"fab fa-github\"></i> [github.com/oliver037](https://github.com/oliver037)\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/hello-world.md","raw":"---\ntitle: 关于我\ndate: 2025-02-11\ncategories: \n- 个人简介\ntags:\n- 后端开发\n- Java\n- Spring Boot\n---\n\n{% note info %}\n> 脚踏实地，持续精进，用技术改变生活\n{% endnote %}\n\n## <i class=\"fas fa-terminal\"></i> 终端简介\n\n{% codeblock Terminal lang:bash %}\n> whoami\n王梦琦 | Full Stack Developer\n\n> cat about.txt\n热爱编程，专注于Web开发和人工智能领域\n擅长后端开发，对分布式系统和云原生技术充满热情\n\n> ls skills/\nbackend/  database/  devops/  tools/\n{% endcodeblock %}\n\n## <i class=\"fas fa-graduation-cap\"></i> 教育背景\n\n{% note default %}\n**北京城市学院** | 大数据与互联网专业 | 2021-2025\n- 主修课程：Java编程、数据结构、计算机网络、数据库系统\n- GPA：3.8/4.0\n{% endnote %}\n\n## <i class=\"fas fa-briefcase\"></i> 实习经历\n\n{% tabs experience %}\n<!-- tab 超星图书馆 -->\n{% codeblock 后端开发工程师 | 2023.07 - 2023.09 lang:json %}\n{\n  \"responsibilities\": [\n    \"参与核心业务模块开发\",\n    \"优化系统性能\",\n    \"数据库设计与维护\"\n  ],\n  \"achievements\": [\n    \"系统性能提升30%\",\n    \"重构核心模块\",\n    \"部分接口实现\"\n  ]\n}\n{% endcodeblock %}\n<!-- endtab -->\n\n<!-- tab 神州数码（滴滴外包） -->\n{% codeblock 运维工程师 | 2024.08 - 2025.01 lang:json %}\n{\n  \"responsibilities\": [\n    \"系统运维\",\n    \"服务器管理\",\n    \"监控系统维护\"\n  ],\n  \"achievements\": [\n    \"构建监控平台\",\n    \"优化部署流程\",\n    \"提升系统稳定性\"\n  ]\n}\n{% endcodeblock %}\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-code\"></i> 技术栈\n\n{% tabs tech-stack %}\n<!-- tab 后端开发 -->\n- Java / Spring Boot / MyBatis\n- RESTful API 设计\n- 微服务架构\n<!-- endtab -->\n\n<!-- tab 数据库 -->\n- MySQL / Redis / MongoDB\n- 数据库优化\n- 缓存策略\n<!-- endtab -->\n\n<!-- tab 运维工具 -->\n- Docker / Nginx / Jenkins\n- Linux 系统管理\n- CI/CD 流程\n<!-- endtab -->\n\n<!-- tab 开发工具 -->\n- Git / Maven / IDEA\n- Postman / Swagger\n- JMeter\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-project-diagram\"></i> 项目经验\n\n{% note success %}\n### 数据仓库ETL平台\n\n**技术栈：** Python, Airflow, MySQL, Redis, Kafka\n\n**核心功能：**\n- 数据抽取转换加载\n- 任务调度管理\n- 数据质量监控\n- 性能优化管理\n\n**项目亮点：**\n- 处理效率提升200%\n- 数据准确率达99.9%\n- 监控覆盖率100%\n{% endnote %}\n\n{% note success %}\n### 汽车改装推荐系统\n\n**技术栈：** Spring Boot, Python, TensorFlow, MySQL\n\n**核心功能：**\n- 智能推荐算法\n- 合法性检测\n- 性能优化\n- 用户行为分析\n\n**项目亮点：**\n- 推荐准确率提升30%\n- 系统响应时间优化50%\n- 用户满意度提升40%\n{% endnote %}\n\n## <i class=\"fas fa-user-circle\"></i> 个人特点\n\n{% tabs traits %}\n<!-- tab 技术热情 -->\n- 热爱技术，持续学习\n- 关注技术发展趋势\n- 积极参与技术社区\n<!-- endtab -->\n\n<!-- tab 团队协作 -->\n- 良好的沟通能力\n- 积极主动的工作态度\n- 优秀的问题解决能力\n<!-- endtab -->\n\n<!-- tab 代码品质 -->\n- 注重代码质量\n- 追求优雅的设计\n- 编写完善的文档\n<!-- endtab -->\n{% endtabs %}\n\n## <i class=\"fas fa-road\"></i> 职业规划\n\n{% note primary %}\n1. 深入研究分布式系统\n2. 提升架构设计能力\n3. 探索云原生技术\n4. 贡献开源项目\n{% endnote %}\n\n## <i class=\"fas fa-address-card\"></i> 联系方式\n\n{% tabs contact %}\n<!-- tab 邮箱 -->\n<i class=\"fas fa-envelope\"></i> 1419235897@qq.com\n<!-- endtab -->\n\n<!-- tab 电话 -->\n<i class=\"fas fa-phone\"></i> 15811534195\n<!-- endtab -->\n\n<!-- tab GitHub -->\n<i class=\"fab fa-github\"></i> [github.com/oliver037](https://github.com/oliver037)\n<!-- endtab -->\n{% endtabs %}\n","slug":"hello-world","published":1,"updated":"2025-02-11T08:25:12.018Z","comments":1,"layout":"post","photos":[],"_id":"cm70bo4ad0007utfy0a5obhl3","content":"<div class=\"note info\">\n            <blockquote><p>脚踏实地，持续精进，用技术改变生活</p></blockquote>\n          </div>\n\n<h2 id=\"终端简介\"><a href=\"#终端简介\" class=\"headerlink\" title=\" 终端简介\"></a><i class=\"fas fa-terminal\"></i> 终端简介</h2><figure class=\"highlight bash\"><figcaption><span>Terminal</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">whoami</span></span><br><span class=\"line\">王梦琦 | Full Stack Developer</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"built_in\">cat</span> about.txt</span><br><span class=\"line\">热爱编程，专注于Web开发和人工智能领域</span><br><span class=\"line\">擅长后端开发，对分布式系统和云原生技术充满热情</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"built_in\">ls</span> skills/</span><br><span class=\"line\">backend/  database/  devops/  tools/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\" 教育背景\"></a><i class=\"fas fa-graduation-cap\"></i> 教育背景</h2><div class=\"note default\">\n            <p><strong>北京城市学院</strong> | 大数据与互联网专业 | 2021-2025</p><ul><li>主修课程：Java编程、数据结构、计算机网络、数据库系统</li><li>GPA：3.8&#x2F;4.0</li></ul>\n          </div>\n\n<h2 id=\"实习经历\"><a href=\"#实习经历\" class=\"headerlink\" title=\" 实习经历\"></a><i class=\"fas fa-briefcase\"></i> 实习经历</h2><div class=\"tabs\" id=\"experience\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#experience-1\">超星图书馆</a></li><li class=\"tab\"><a href=\"#experience-2\">神州数码（滴滴外包）</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"experience-1\"><figure class=\"highlight json\"><figcaption><span>后端开发工程师 | 2023.07 - 2023.09</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;responsibilities&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;参与核心业务模块开发&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;优化系统性能&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;数据库设计与维护&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;achievements&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;系统性能提升30%&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;重构核心模块&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;部分接口实现&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"experience-2\"><figure class=\"highlight json\"><figcaption><span>运维工程师 | 2024.08 - 2025.01</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;responsibilities&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;系统运维&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;服务器管理&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;监控系统维护&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;achievements&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;构建监控平台&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;优化部署流程&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;提升系统稳定性&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\" 技术栈\"></a><i class=\"fas fa-code\"></i> 技术栈</h2><div class=\"tabs\" id=\"tech-stack\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tech-stack-1\">后端开发</a></li><li class=\"tab\"><a href=\"#tech-stack-2\">数据库</a></li><li class=\"tab\"><a href=\"#tech-stack-3\">运维工具</a></li><li class=\"tab\"><a href=\"#tech-stack-4\">开发工具</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tech-stack-1\"><ul>\n<li>Java &#x2F; Spring Boot &#x2F; MyBatis</li>\n<li>RESTful API 设计</li>\n<li>微服务架构</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-2\"><ul>\n<li>MySQL &#x2F; Redis &#x2F; MongoDB</li>\n<li>数据库优化</li>\n<li>缓存策略</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-3\"><ul>\n<li>Docker &#x2F; Nginx &#x2F; Jenkins</li>\n<li>Linux 系统管理</li>\n<li>CI&#x2F;CD 流程</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-4\"><ul>\n<li>Git &#x2F; Maven &#x2F; IDEA</li>\n<li>Postman &#x2F; Swagger</li>\n<li>JMeter</li>\n</ul></div></div></div>\n\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\" 项目经验\"></a><i class=\"fas fa-project-diagram\"></i> 项目经验</h2><div class=\"note success\">\n            <h3 id=\"数据仓库ETL平台\"><a href=\"#数据仓库ETL平台\" class=\"headerlink\" title=\"数据仓库ETL平台\"></a>数据仓库ETL平台</h3><p><strong>技术栈：</strong> Python, Airflow, MySQL, Redis, Kafka</p><p><strong>核心功能：</strong></p><ul><li>数据抽取转换加载</li><li>任务调度管理</li><li>数据质量监控</li><li>性能优化管理</li></ul><p><strong>项目亮点：</strong></p><ul><li>处理效率提升200%</li><li>数据准确率达99.9%</li><li>监控覆盖率100%</li></ul>\n          </div>\n\n<div class=\"note success\">\n            <h3 id=\"汽车改装推荐系统\"><a href=\"#汽车改装推荐系统\" class=\"headerlink\" title=\"汽车改装推荐系统\"></a>汽车改装推荐系统</h3><p><strong>技术栈：</strong> Spring Boot, Python, TensorFlow, MySQL</p><p><strong>核心功能：</strong></p><ul><li>智能推荐算法</li><li>合法性检测</li><li>性能优化</li><li>用户行为分析</li></ul><p><strong>项目亮点：</strong></p><ul><li>推荐准确率提升30%</li><li>系统响应时间优化50%</li><li>用户满意度提升40%</li></ul>\n          </div>\n\n<h2 id=\"个人特点\"><a href=\"#个人特点\" class=\"headerlink\" title=\" 个人特点\"></a><i class=\"fas fa-user-circle\"></i> 个人特点</h2><div class=\"tabs\" id=\"traits\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#traits-1\">技术热情</a></li><li class=\"tab\"><a href=\"#traits-2\">团队协作</a></li><li class=\"tab\"><a href=\"#traits-3\">代码品质</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"traits-1\"><ul>\n<li>热爱技术，持续学习</li>\n<li>关注技术发展趋势</li>\n<li>积极参与技术社区</li>\n</ul></div><div class=\"tab-pane\" id=\"traits-2\"><ul>\n<li>良好的沟通能力</li>\n<li>积极主动的工作态度</li>\n<li>优秀的问题解决能力</li>\n</ul></div><div class=\"tab-pane\" id=\"traits-3\"><ul>\n<li>注重代码质量</li>\n<li>追求优雅的设计</li>\n<li>编写完善的文档</li>\n</ul></div></div></div>\n\n<h2 id=\"职业规划\"><a href=\"#职业规划\" class=\"headerlink\" title=\" 职业规划\"></a><i class=\"fas fa-road\"></i> 职业规划</h2><div class=\"note primary\">\n            <ol><li>深入研究分布式系统</li><li>提升架构设计能力</li><li>探索云原生技术</li><li>贡献开源项目</li></ol>\n          </div>\n\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\" 联系方式\"></a><i class=\"fas fa-address-card\"></i> 联系方式</h2><div class=\"tabs\" id=\"contact\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#contact-1\">邮箱</a></li><li class=\"tab\"><a href=\"#contact-2\">电话</a></li><li class=\"tab\"><a href=\"#contact-3\">GitHub</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"contact-1\"><p><i class=\"fas fa-envelope\"></i> <a href=\"mailto:&#x31;&#52;&#49;&#57;&#x32;&#x33;&#53;&#x38;&#x39;&#55;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#109;\">&#x31;&#52;&#49;&#57;&#x32;&#x33;&#53;&#x38;&#x39;&#55;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#109;</a></p></div><div class=\"tab-pane\" id=\"contact-2\"><p><i class=\"fas fa-phone\"></i> 15811534195</p></div><div class=\"tab-pane\" id=\"contact-3\"><p><i class=\"fab fa-github\"></i> <a href=\"https://github.com/oliver037\">github.com&#x2F;oliver037</a></p></div></div></div>\n","excerpt":"","more":"<div class=\"note info\">\n            <blockquote><p>脚踏实地，持续精进，用技术改变生活</p></blockquote>\n          </div>\n\n<h2 id=\"终端简介\"><a href=\"#终端简介\" class=\"headerlink\" title=\" 终端简介\"></a><i class=\"fas fa-terminal\"></i> 终端简介</h2><figure class=\"highlight bash\"><figcaption><span>Terminal</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">whoami</span></span><br><span class=\"line\">王梦琦 | Full Stack Developer</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"built_in\">cat</span> about.txt</span><br><span class=\"line\">热爱编程，专注于Web开发和人工智能领域</span><br><span class=\"line\">擅长后端开发，对分布式系统和云原生技术充满热情</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"built_in\">ls</span> skills/</span><br><span class=\"line\">backend/  database/  devops/  tools/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\" 教育背景\"></a><i class=\"fas fa-graduation-cap\"></i> 教育背景</h2><div class=\"note default\">\n            <p><strong>北京城市学院</strong> | 大数据与互联网专业 | 2021-2025</p><ul><li>主修课程：Java编程、数据结构、计算机网络、数据库系统</li><li>GPA：3.8&#x2F;4.0</li></ul>\n          </div>\n\n<h2 id=\"实习经历\"><a href=\"#实习经历\" class=\"headerlink\" title=\" 实习经历\"></a><i class=\"fas fa-briefcase\"></i> 实习经历</h2><div class=\"tabs\" id=\"experience\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#experience-1\">超星图书馆</a></li><li class=\"tab\"><a href=\"#experience-2\">神州数码（滴滴外包）</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"experience-1\"><figure class=\"highlight json\"><figcaption><span>后端开发工程师 | 2023.07 - 2023.09</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;responsibilities&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;参与核心业务模块开发&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;优化系统性能&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;数据库设计与维护&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;achievements&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;系统性能提升30%&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;重构核心模块&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;部分接口实现&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"experience-2\"><figure class=\"highlight json\"><figcaption><span>运维工程师 | 2024.08 - 2025.01</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;responsibilities&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;系统运维&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;服务器管理&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;监控系统维护&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;achievements&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;构建监控平台&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;优化部署流程&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;提升系统稳定性&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\" 技术栈\"></a><i class=\"fas fa-code\"></i> 技术栈</h2><div class=\"tabs\" id=\"tech-stack\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tech-stack-1\">后端开发</a></li><li class=\"tab\"><a href=\"#tech-stack-2\">数据库</a></li><li class=\"tab\"><a href=\"#tech-stack-3\">运维工具</a></li><li class=\"tab\"><a href=\"#tech-stack-4\">开发工具</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tech-stack-1\"><ul>\n<li>Java &#x2F; Spring Boot &#x2F; MyBatis</li>\n<li>RESTful API 设计</li>\n<li>微服务架构</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-2\"><ul>\n<li>MySQL &#x2F; Redis &#x2F; MongoDB</li>\n<li>数据库优化</li>\n<li>缓存策略</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-3\"><ul>\n<li>Docker &#x2F; Nginx &#x2F; Jenkins</li>\n<li>Linux 系统管理</li>\n<li>CI&#x2F;CD 流程</li>\n</ul></div><div class=\"tab-pane\" id=\"tech-stack-4\"><ul>\n<li>Git &#x2F; Maven &#x2F; IDEA</li>\n<li>Postman &#x2F; Swagger</li>\n<li>JMeter</li>\n</ul></div></div></div>\n\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\" 项目经验\"></a><i class=\"fas fa-project-diagram\"></i> 项目经验</h2><div class=\"note success\">\n            <h3 id=\"数据仓库ETL平台\"><a href=\"#数据仓库ETL平台\" class=\"headerlink\" title=\"数据仓库ETL平台\"></a>数据仓库ETL平台</h3><p><strong>技术栈：</strong> Python, Airflow, MySQL, Redis, Kafka</p><p><strong>核心功能：</strong></p><ul><li>数据抽取转换加载</li><li>任务调度管理</li><li>数据质量监控</li><li>性能优化管理</li></ul><p><strong>项目亮点：</strong></p><ul><li>处理效率提升200%</li><li>数据准确率达99.9%</li><li>监控覆盖率100%</li></ul>\n          </div>\n\n<div class=\"note success\">\n            <h3 id=\"汽车改装推荐系统\"><a href=\"#汽车改装推荐系统\" class=\"headerlink\" title=\"汽车改装推荐系统\"></a>汽车改装推荐系统</h3><p><strong>技术栈：</strong> Spring Boot, Python, TensorFlow, MySQL</p><p><strong>核心功能：</strong></p><ul><li>智能推荐算法</li><li>合法性检测</li><li>性能优化</li><li>用户行为分析</li></ul><p><strong>项目亮点：</strong></p><ul><li>推荐准确率提升30%</li><li>系统响应时间优化50%</li><li>用户满意度提升40%</li></ul>\n          </div>\n\n<h2 id=\"个人特点\"><a href=\"#个人特点\" class=\"headerlink\" title=\" 个人特点\"></a><i class=\"fas fa-user-circle\"></i> 个人特点</h2><div class=\"tabs\" id=\"traits\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#traits-1\">技术热情</a></li><li class=\"tab\"><a href=\"#traits-2\">团队协作</a></li><li class=\"tab\"><a href=\"#traits-3\">代码品质</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"traits-1\"><ul>\n<li>热爱技术，持续学习</li>\n<li>关注技术发展趋势</li>\n<li>积极参与技术社区</li>\n</ul></div><div class=\"tab-pane\" id=\"traits-2\"><ul>\n<li>良好的沟通能力</li>\n<li>积极主动的工作态度</li>\n<li>优秀的问题解决能力</li>\n</ul></div><div class=\"tab-pane\" id=\"traits-3\"><ul>\n<li>注重代码质量</li>\n<li>追求优雅的设计</li>\n<li>编写完善的文档</li>\n</ul></div></div></div>\n\n<h2 id=\"职业规划\"><a href=\"#职业规划\" class=\"headerlink\" title=\" 职业规划\"></a><i class=\"fas fa-road\"></i> 职业规划</h2><div class=\"note primary\">\n            <ol><li>深入研究分布式系统</li><li>提升架构设计能力</li><li>探索云原生技术</li><li>贡献开源项目</li></ol>\n          </div>\n\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\" 联系方式\"></a><i class=\"fas fa-address-card\"></i> 联系方式</h2><div class=\"tabs\" id=\"contact\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#contact-1\">邮箱</a></li><li class=\"tab\"><a href=\"#contact-2\">电话</a></li><li class=\"tab\"><a href=\"#contact-3\">GitHub</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"contact-1\"><p><i class=\"fas fa-envelope\"></i> <a href=\"mailto:&#x31;&#52;&#49;&#57;&#x32;&#x33;&#53;&#x38;&#x39;&#55;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#109;\">&#x31;&#52;&#49;&#57;&#x32;&#x33;&#53;&#x38;&#x39;&#55;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#109;</a></p></div><div class=\"tab-pane\" id=\"contact-2\"><p><i class=\"fas fa-phone\"></i> 15811534195</p></div><div class=\"tab-pane\" id=\"contact-3\"><p><i class=\"fab fa-github\"></i> <a href=\"https://github.com/oliver037\">github.com&#x2F;oliver037</a></p></div></div></div>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm70bo4a40001utfy2z3meysc","category_id":"cm70bo4aa0004utfyabqu6bxe","_id":"cm70bo4aj000dutfycxgddq97"},{"post_id":"cm70bo4a80003utfyg583ggmm","category_id":"cm70bo4aa0004utfyabqu6bxe","_id":"cm70bo4aj000futfy6dbw64lz"},{"post_id":"cm70bo4ad0007utfy0a5obhl3","category_id":"cm70bo4ai000cutfy2o062xbf","_id":"cm70bo4ak000hutfy2mvygrjp"}],"PostTag":[{"post_id":"cm70bo4a40001utfy2z3meysc","tag_id":"cm70bo4ac0005utfy2f7zcmiq","_id":"cm70bo4ak000jutfyaitvfcr7"},{"post_id":"cm70bo4a40001utfy2z3meysc","tag_id":"cm70bo4ag000butfydedigtp0","_id":"cm70bo4ak000kutfy2l34d5xi"},{"post_id":"cm70bo4a40001utfy2z3meysc","tag_id":"cm70bo4aj000eutfy4n5r9e0l","_id":"cm70bo4al000mutfyh77fecbg"},{"post_id":"cm70bo4a40001utfy2z3meysc","tag_id":"cm70bo4aj000gutfy0fwadu0g","_id":"cm70bo4al000nutfy4595hqa2"},{"post_id":"cm70bo4a80003utfyg583ggmm","tag_id":"cm70bo4ak000iutfy4vvu9aiz","_id":"cm70bo4am000rutfy75vd5f21"},{"post_id":"cm70bo4a80003utfyg583ggmm","tag_id":"cm70bo4ak000lutfy9r7jd7as","_id":"cm70bo4am000sutfyhqpxglzo"},{"post_id":"cm70bo4a80003utfyg583ggmm","tag_id":"cm70bo4aj000eutfy4n5r9e0l","_id":"cm70bo4am000uutfy1r23fz0t"},{"post_id":"cm70bo4a80003utfyg583ggmm","tag_id":"cm70bo4al000putfyhdpo27sz","_id":"cm70bo4am000vutfyduv08737"},{"post_id":"cm70bo4ad0007utfy0a5obhl3","tag_id":"cm70bo4al000qutfy4dl21rta","_id":"cm70bo4an000xutfyez0v3nre"},{"post_id":"cm70bo4ad0007utfy0a5obhl3","tag_id":"cm70bo4am000tutfy9ptu457i","_id":"cm70bo4an000yutfy3ciu6w4l"},{"post_id":"cm70bo4ad0007utfy0a5obhl3","tag_id":"cm70bo4am000wutfy6n148ihl","_id":"cm70bo4an000zutfy5rc7egx4"}],"Tag":[{"name":"推荐系统","_id":"cm70bo4ac0005utfy2f7zcmiq"},{"name":"机器学习","_id":"cm70bo4ag000butfydedigtp0"},{"name":"Python","_id":"cm70bo4aj000eutfy4n5r9e0l"},{"name":"协同过滤","_id":"cm70bo4aj000gutfy0fwadu0g"},{"name":"ETL","_id":"cm70bo4ak000iutfy4vvu9aiz"},{"name":"数据仓库","_id":"cm70bo4ak000lutfy9r7jd7as"},{"name":"Airflow","_id":"cm70bo4al000putfyhdpo27sz"},{"name":"后端开发","_id":"cm70bo4al000qutfy4dl21rta"},{"name":"Java","_id":"cm70bo4am000tutfy9ptu457i"},{"name":"Spring Boot","_id":"cm70bo4am000wutfy6n148ihl"}]}}